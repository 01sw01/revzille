{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# RevaZille - Fully Managed Elasticsearch Cloud Service\n\n## Overview\n\nRevaZille is a premium cloud service that provides fully managed Elasticsearch clusters across multiple cloud providers (AWS, Azure, GCP, and RevaLogix Private Cloud). Built by RevaLogix, it offers businesses the ability to deploy powerful, scalable search and analytics infrastructure with consistent high-performance experience regardless of the chosen cloud provider. The application features a comprehensive landing page built with React and TypeScript, showcasing enterprise-grade technical architecture, professional services, migration capabilities, and detailed performance specifications designed to compete with Elastic Cloud, SquareShift, and other enterprise Elasticsearch providers.\n\n## Recent Changes (January 2025)\n\n✓ Enhanced technical depth and professional clarity based on competitor analysis\n✓ Added comprehensive technical architecture specifications section\n✓ Implemented professional services section with certified expert positioning  \n✓ Created migration and integration section for competitive positioning\n✓ Enhanced pricing tiers with detailed technical specifications\n✓ Improved dashboard preview with advanced monitoring capabilities\n✓ Updated navigation structure to include Architecture and Services sections\n✓ Built comprehensive navigation menu system like Elastic.co with dropdown menus\n✓ Created detailed inside pages: Elasticsearch, Kibana, Security, Machine Learning, Pricing\n✓ Implemented mobile-responsive navigation with organized product/solution categories\n✓ Added router support for multi-page application with proper page routing\n✓ Created comprehensive solution pages: Search Applications, Observability, Security Analytics, Enterprise Search\n✓ Added Footer component with organized navigation links and company information\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **Styling**: Tailwind CSS with shadcn/ui component library for consistent design system\n- **Routing**: Wouter for lightweight client-side routing with smooth scrolling navigation\n- **State Management**: TanStack Query for server state management and caching\n- **UI Components**: Radix UI primitives with shadcn/ui components including Badge, Card, Button components\n- **Build System**: Vite with hot module replacement and development optimizations\n- **Component Architecture**: Modular sections including TechnicalSpecs, ProfessionalServices, MigrationIntegration components\n- **Multi-page Structure**: Dedicated pages for Elasticsearch, Kibana, Security, Machine Learning, and Pricing with comprehensive navigation\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js web framework\n- **Language**: TypeScript with ES modules\n- **Development Setup**: tsx for TypeScript execution in development\n- **Production Build**: esbuild for fast bundling and compilation\n- **Middleware**: Custom logging middleware for API request tracking\n\n### Data Storage Solutions\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Connection**: Neon Database serverless connection (@neondatabase/serverless)\n- **Schema Management**: Drizzle Kit for migrations and schema management\n- **Validation**: Zod schemas integrated with Drizzle for runtime type checking\n- **Session Storage**: PostgreSQL-based session storage with connect-pg-simple\n\n### Project Structure\n- **Monorepo Layout**: Shared code in `/shared`, client code in `/client`, server code in `/server`\n- **Type Safety**: Shared schema definitions between frontend and backend\n- **Asset Management**: Static assets in `/attached_assets` with Vite alias configuration\n- **Path Aliases**: Configured for clean imports (@/ for client, @shared/ for shared code)\n\n### Development Experience\n- **Hot Reloading**: Full-stack development with Vite HMR and server auto-restart\n- **Type Checking**: Comprehensive TypeScript configuration across all packages\n- **Error Handling**: Runtime error overlay integration for development\n- **Code Organization**: Modular component structure with separation of concerns\n\n## External Dependencies\n\n### UI and Styling\n- **Tailwind CSS**: Utility-first CSS framework for rapid UI development\n- **Radix UI**: Comprehensive set of accessible UI primitives\n- **shadcn/ui**: Pre-built component library built on top of Radix UI\n- **Lucide React**: Icon library for consistent iconography\n- **class-variance-authority**: Utility for creating variant-based component APIs\n\n### Development Tools\n- **Vite**: Fast build tool and development server\n- **TypeScript**: Static type checking and enhanced developer experience\n- **ESBuild**: Fast bundler for production builds\n- **PostCSS**: CSS processing with Tailwind CSS integration\n\n### Database and Backend\n- **Drizzle ORM**: Type-safe ORM with PostgreSQL support\n- **Neon Database**: Serverless PostgreSQL hosting\n- **Express.js**: Web application framework for Node.js\n- **connect-pg-simple**: PostgreSQL session store for Express sessions\n\n### State Management and Data Fetching\n- **TanStack Query**: Server state management with caching and synchronization\n- **React Hook Form**: Form state management and validation\n- **Zod**: Runtime type validation and schema definition\n\n### Utilities and Libraries\n- **date-fns**: Date manipulation and formatting\n- **clsx**: Utility for constructing className strings conditionally\n- **nanoid**: URL-safe unique ID generator\n- **wouter**: Lightweight routing library for React","size_bytes":5641},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/index_1754372740289.css":{"content":"@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n\r\n:root {\r\n  --background: hsl(0, 0%, 100%);\r\n  --foreground: hsl(224, 71.4%, 4.1%);\r\n  --muted: hsl(220, 14.3%, 95.9%);\r\n  --muted-foreground: hsl(220, 8.9%, 46.1%);\r\n  --popover: hsl(0, 0%, 100%);\r\n  --popover-foreground: hsl(224, 71.4%, 4.1%);\r\n  --card: hsl(0, 0%, 100%);\r\n  --card-foreground: hsl(224, 71.4%, 4.1%);\r\n  --border: hsl(220, 13%, 91%);\r\n  --input: hsl(220, 13%, 91%);\r\n  --primary: hsl(262, 83%, 58%);\r\n  --primary-foreground: hsl(210, 20%, 98%);\r\n  --secondary: hsl(220, 14.3%, 95.9%);\r\n  --secondary-foreground: hsl(220, 8.9%, 46.1%);\r\n  --accent: hsl(220, 14.3%, 95.9%);\r\n  --accent-foreground: hsl(220, 8.9%, 46.1%);\r\n  --destructive: hsl(0, 84.2%, 60.2%);\r\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\r\n  --ring: hsl(262, 83%, 58%);\r\n  --radius: 0.5rem;\r\n  \r\n  /* Purple color palette */\r\n  --primary-50: hsl(270, 100%, 98%);\r\n  --primary-100: hsl(269, 100%, 95%);\r\n  --primary-200: hsl(269, 100%, 92%);\r\n  --primary-300: hsl(268, 100%, 86%);\r\n  --primary-400: hsl(270, 95%, 75%);\r\n  --primary-500: hsl(262, 83%, 58%);\r\n  --primary-600: hsl(262, 83%, 48%);\r\n  --primary-700: hsl(263, 70%, 50%);\r\n  --primary-800: hsl(263, 69%, 42%);\r\n  --primary-900: hsl(264, 69%, 26%);\r\n}\r\n\r\n.dark {\r\n  --background: hsl(224, 71.4%, 4.1%);\r\n  --foreground: hsl(210, 20%, 98%);\r\n  --muted: hsl(215, 27.9%, 16.9%);\r\n  --muted-foreground: hsl(217.9, 10.6%, 64.9%);\r\n  --popover: hsl(224, 71.4%, 4.1%);\r\n  --popover-foreground: hsl(210, 20%, 98%);\r\n  --card: hsl(224, 71.4%, 4.1%);\r\n  --card-foreground: hsl(210, 20%, 98%);\r\n  --border: hsl(215, 27.9%, 16.9%);\r\n  --input: hsl(215, 27.9%, 16.9%);\r\n  --primary: hsl(262, 83%, 58%);\r\n  --primary-foreground: hsl(210, 20%, 98%);\r\n  --secondary: hsl(215, 27.9%, 16.9%);\r\n  --secondary-foreground: hsl(210, 20%, 98%);\r\n  --accent: hsl(215, 27.9%, 16.9%);\r\n  --accent-foreground: hsl(210, 20%, 98%);\r\n  --destructive: hsl(0, 62.8%, 30.6%);\r\n  --destructive-foreground: hsl(210, 20%, 98%);\r\n  --ring: hsl(262, 83%, 58%);\r\n}\r\n\r\n@layer base {\r\n  * {\r\n    @apply border-border;\r\n  }\r\n\r\n  body {\r\n    @apply font-sans antialiased bg-background text-foreground;\r\n  }\r\n}\r\n\r\n/* Custom purple theme classes */\r\n.bg-primary-50 { background-color: hsl(270, 100%, 98%); }\r\n.bg-primary-100 { background-color: hsl(269, 100%, 95%); }\r\n.bg-primary-200 { background-color: hsl(269, 100%, 92%); }\r\n.bg-primary-300 { background-color: hsl(268, 100%, 86%); }\r\n.bg-primary-400 { background-color: hsl(270, 95%, 75%); }\r\n.bg-primary-500 { background-color: hsl(262, 83%, 58%); }\r\n.bg-primary-600 { background-color: hsl(262, 83%, 48%); }\r\n.bg-primary-700 { background-color: hsl(263, 70%, 50%); }\r\n.bg-primary-800 { background-color: hsl(263, 69%, 42%); }\r\n.bg-primary-900 { background-color: hsl(264, 69%, 26%); }\r\n\r\n.text-primary-50 { color: hsl(270, 100%, 98%); }\r\n.text-primary-100 { color: hsl(269, 100%, 95%); }\r\n.text-primary-200 { color: hsl(269, 100%, 92%); }\r\n.text-primary-300 { color: hsl(268, 100%, 86%); }\r\n.text-primary-400 { color: hsl(270, 95%, 75%); }\r\n.text-primary-500 { color: hsl(262, 83%, 58%); }\r\n.text-primary-600 { color: hsl(262, 83%, 48%); }\r\n.text-primary-700 { color: hsl(263, 70%, 50%); }\r\n.text-primary-800 { color: hsl(263, 69%, 42%); }\r\n.text-primary-900 { color: hsl(264, 69%, 26%); }\r\n\r\n.border-primary-50 { border-color: hsl(270, 100%, 98%); }\r\n.border-primary-100 { border-color: hsl(269, 100%, 95%); }\r\n.border-primary-200 { border-color: hsl(269, 100%, 92%); }\r\n.border-primary-300 { border-color: hsl(268, 100%, 86%); }\r\n.border-primary-400 { border-color: hsl(270, 95%, 75%); }\r\n.border-primary-500 { border-color: hsl(262, 83%, 58%); }\r\n.border-primary-600 { border-color: hsl(262, 83%, 48%); }\r\n.border-primary-700 { border-color: hsl(263, 70%, 50%); }\r\n.border-primary-800 { border-color: hsl(263, 69%, 42%); }\r\n.border-primary-900 { border-color: hsl(264, 69%, 26%); }\r\n\r\n.hover\\:bg-primary-50:hover { background-color: hsl(270, 100%, 98%); }\r\n.hover\\:bg-primary-700:hover { background-color: hsl(263, 70%, 50%); }\r\n.hover\\:text-primary-600:hover { color: hsl(262, 83%, 48%); }\r\n.hover\\:text-primary-700:hover { color: hsl(263, 70%, 50%); }\r\n.hover\\:border-primary-300:hover { border-color: hsl(268, 100%, 86%); }\r\n\r\n.focus\\:ring-primary-500:focus { \r\n  --tw-ring-color: hsl(262, 83%, 58%);\r\n}\r\n.focus\\:border-primary-500:focus { \r\n  border-color: hsl(262, 83%, 58%); \r\n}\r\n","size_bytes":4413},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertTrialSignupSchema } from \"@shared/schema\";\nimport { fromZodError } from \"zod-validation-error\";\nimport bcrypt from \"bcrypt\";\nimport { sendAdminNotification, sendWelcomeEmail } from \"./emailService\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Trial signup endpoint\n  app.post(\"/api/trial-signup\", async (req, res) => {\n    try {\n      const validatedData = insertTrialSignupSchema.parse(req.body);\n      \n      // Check if email already exists\n      const existingSignup = await storage.getTrialSignupByEmail(validatedData.email);\n      if (existingSignup) {\n        return res.status(400).json({ \n          message: \"An account with this email already exists\" \n        });\n      }\n\n      // Hash password\n      const hashedPassword = await bcrypt.hash(validatedData.password, 10);\n      \n      // Create trial signup record\n      const signupData = {\n        name: validatedData.name,\n        companyName: validatedData.companyName,\n        email: validatedData.email,\n        password: hashedPassword,\n        phoneNumber: validatedData.phoneNumber,\n      };\n\n      const newSignup = await storage.createTrialSignup(signupData);\n\n      // Send emails (admin notification and welcome email)\n      await Promise.all([\n        sendAdminNotification({\n          name: validatedData.name,\n          companyName: validatedData.companyName,\n          email: validatedData.email,\n          phoneNumber: validatedData.phoneNumber,\n        }),\n        sendWelcomeEmail(validatedData.email, validatedData.name)\n      ]);\n      \n      res.status(201).json({ \n        message: \"Trial signup successful! Welcome email sent.\",\n        id: newSignup.id \n      });\n    } catch (error: any) {\n      if (error.name === \"ZodError\") {\n        const validationError = fromZodError(error);\n        return res.status(400).json({ \n          message: validationError.toString() \n        });\n      }\n      \n      console.error(\"Trial signup error:\", error);\n      res.status(500).json({ \n        message: \"Internal server error\" \n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":2266},"server/storage.ts":{"content":"import { drizzle } from \"drizzle-orm/neon-serverless\";\nimport { Pool } from \"@neondatabase/serverless\";\nimport { eq } from \"drizzle-orm\";\nimport { type User, type InsertUser, type TrialSignup, type InsertTrialSignup, users, trialSignups } from \"@shared/schema\";\n\nconst pool = new Pool({ connectionString: process.env.DATABASE_URL! });\nconst db = drizzle(pool);\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  getTrialSignupByEmail(email: string): Promise<TrialSignup | undefined>;\n  createTrialSignup(signupData: Omit<InsertTrialSignup, 'confirmPassword'>): Promise<TrialSignup>;\n}\n\nexport class DbStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const result = await db.select().from(users).where(eq(users.id, id));\n    return result[0];\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const result = await db.select().from(users).where(eq(users.username, username));\n    return result[0];\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const result = await db.insert(users).values(insertUser).returning();\n    return result[0];\n  }\n\n  async getTrialSignupByEmail(email: string): Promise<TrialSignup | undefined> {\n    const result = await db.select().from(trialSignups).where(eq(trialSignups.email, email));\n    return result[0];\n  }\n\n  async createTrialSignup(signupData: Omit<InsertTrialSignup, 'confirmPassword'>): Promise<TrialSignup> {\n    const result = await db.insert(trialSignups).values(signupData).returning();\n    return result[0];\n  }\n}\n\nexport const storage = new DbStorage();\n","size_bytes":1737},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const trialSignups = pgTable(\"trial_signups\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  companyName: text(\"company_name\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  phoneNumber: text(\"phone_number\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertTrialSignupSchema = createInsertSchema(trialSignups).pick({\n  name: true,\n  companyName: true,\n  email: true,\n  password: true,\n  phoneNumber: true,\n}).extend({\n  confirmPassword: z.string(),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: [\"confirmPassword\"],\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertTrialSignup = z.infer<typeof insertTrialSignupSchema>;\nexport type TrialSignup = typeof trialSignups.$inferSelect;\n","size_bytes":1467},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport Elasticsearch from \"@/pages/elasticsearch\";\nimport Kibana from \"@/pages/kibana\";\nimport MachineLearning from \"@/pages/machine-learning\";\nimport Security from \"@/pages/security\";\nimport Pricing from \"@/pages/pricing\";\nimport SearchSolutions from \"@/pages/solutions/search\";\nimport ObservabilitySolutions from \"@/pages/solutions/observability\";\nimport SecuritySolutions from \"@/pages/solutions/security\";\nimport EnterpriseSolutions from \"@/pages/solutions/enterprise\";\nimport NotFound from \"@/pages/not-found\";\nimport TrialSignup from \"@/pages/trial-signup\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/elasticsearch\" component={Elasticsearch} />\n      <Route path=\"/kibana\" component={Kibana} />\n      <Route path=\"/machine-learning\" component={MachineLearning} />\n      <Route path=\"/security\" component={Security} />\n      <Route path=\"/pricing\" component={Pricing} />\n      <Route path=\"/solutions/search\" component={SearchSolutions} />\n      <Route path=\"/solutions/observability\" component={ObservabilitySolutions} />\n      <Route path=\"/solutions/security\" component={SecuritySolutions} />\n      <Route path=\"/solutions/enterprise\" component={EnterpriseSolutions} />\n      <Route path=\"/trial-signup\" component={TrialSignup} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1873},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(224, 71.4%, 4.1%);\n  --muted: hsl(220, 14.3%, 95.9%);\n  --muted-foreground: hsl(220, 8.9%, 46.1%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(224, 71.4%, 4.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(224, 71.4%, 4.1%);\n  --border: hsl(220, 13%, 91%);\n  --input: hsl(220, 13%, 91%);\n  --primary: hsl(262, 83%, 58%);\n  --primary-foreground: hsl(210, 20%, 98%);\n  --secondary: hsl(220, 14.3%, 95.9%);\n  --secondary-foreground: hsl(220, 8.9%, 46.1%);\n  --accent: hsl(220, 14.3%, 95.9%);\n  --accent-foreground: hsl(220, 8.9%, 46.1%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(262, 83%, 58%);\n  --radius: 0.5rem;\n  \n  /* Purple color palette */\n  --primary-50: hsl(270, 100%, 98%);\n  --primary-100: hsl(269, 100%, 95%);\n  --primary-200: hsl(269, 100%, 92%);\n  --primary-300: hsl(268, 100%, 86%);\n  --primary-400: hsl(270, 95%, 75%);\n  --primary-500: hsl(262, 83%, 58%);\n  --primary-600: hsl(262, 83%, 48%);\n  --primary-700: hsl(263, 70%, 50%);\n  --primary-800: hsl(263, 69%, 42%);\n  --primary-900: hsl(264, 69%, 26%);\n}\n\n.dark {\n  --background: hsl(224, 71.4%, 4.1%);\n  --foreground: hsl(210, 20%, 98%);\n  --muted: hsl(215, 27.9%, 16.9%);\n  --muted-foreground: hsl(217.9, 10.6%, 64.9%);\n  --popover: hsl(224, 71.4%, 4.1%);\n  --popover-foreground: hsl(210, 20%, 98%);\n  --card: hsl(224, 71.4%, 4.1%);\n  --card-foreground: hsl(210, 20%, 98%);\n  --border: hsl(215, 27.9%, 16.9%);\n  --input: hsl(215, 27.9%, 16.9%);\n  --primary: hsl(262, 83%, 58%);\n  --primary-foreground: hsl(210, 20%, 98%);\n  --secondary: hsl(215, 27.9%, 16.9%);\n  --secondary-foreground: hsl(210, 20%, 98%);\n  --accent: hsl(215, 27.9%, 16.9%);\n  --accent-foreground: hsl(210, 20%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(210, 20%, 98%);\n  --ring: hsl(262, 83%, 58%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n/* Custom purple theme classes */\n.bg-primary-50 { background-color: hsl(270, 100%, 98%); }\n.bg-primary-100 { background-color: hsl(269, 100%, 95%); }\n.bg-primary-200 { background-color: hsl(269, 100%, 92%); }\n.bg-primary-300 { background-color: hsl(268, 100%, 86%); }\n.bg-primary-400 { background-color: hsl(270, 95%, 75%); }\n.bg-primary-500 { background-color: hsl(262, 83%, 58%); }\n.bg-primary-600 { background-color: hsl(262, 83%, 48%); }\n.bg-primary-700 { background-color: hsl(263, 70%, 50%); }\n.bg-primary-800 { background-color: hsl(263, 69%, 42%); }\n.bg-primary-900 { background-color: hsl(264, 69%, 26%); }\n\n.text-primary-50 { color: hsl(270, 100%, 98%); }\n.text-primary-100 { color: hsl(269, 100%, 95%); }\n.text-primary-200 { color: hsl(269, 100%, 92%); }\n.text-primary-300 { color: hsl(268, 100%, 86%); }\n.text-primary-400 { color: hsl(270, 95%, 75%); }\n.text-primary-500 { color: hsl(262, 83%, 58%); }\n.text-primary-600 { color: hsl(262, 83%, 48%); }\n.text-primary-700 { color: hsl(263, 70%, 50%); }\n.text-primary-800 { color: hsl(263, 69%, 42%); }\n.text-primary-900 { color: hsl(264, 69%, 26%); }\n\n.border-primary-50 { border-color: hsl(270, 100%, 98%); }\n.border-primary-100 { border-color: hsl(269, 100%, 95%); }\n.border-primary-200 { border-color: hsl(269, 100%, 92%); }\n.border-primary-300 { border-color: hsl(268, 100%, 86%); }\n.border-primary-400 { border-color: hsl(270, 95%, 75%); }\n.border-primary-500 { border-color: hsl(262, 83%, 58%); }\n.border-primary-600 { border-color: hsl(262, 83%, 48%); }\n.border-primary-700 { border-color: hsl(263, 70%, 50%); }\n.border-primary-800 { border-color: hsl(263, 69%, 42%); }\n.border-primary-900 { border-color: hsl(264, 69%, 26%); }\n\n.hover\\:bg-primary-50:hover { background-color: hsl(270, 100%, 98%); }\n.hover\\:bg-primary-700:hover { background-color: hsl(263, 70%, 50%); }\n.hover\\:text-primary-600:hover { color: hsl(262, 83%, 48%); }\n.hover\\:text-primary-700:hover { color: hsl(263, 70%, 50%); }\n.hover\\:border-primary-300:hover { border-color: hsl(268, 100%, 86%); }\n\n.focus\\:ring-primary-500:focus { \n  --tw-ring-color: hsl(262, 83%, 58%);\n}\n.focus\\:border-primary-500:focus { \n  border-color: hsl(262, 83%, 58%); \n}\n\n/* Custom gradient classes */\n.gradient-text {\n  background: linear-gradient(135deg, hsl(262, 83%, 58%), hsl(270, 95%, 75%));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.gradient-bg {\n  background: linear-gradient(135deg, hsl(262, 83%, 58%), hsl(270, 95%, 75%));\n}\n\n.hero-gradient {\n  background: linear-gradient(135deg, hsl(270, 100%, 98%) 0%, hsl(269, 100%, 95%) 100%);\n}\n\n.glass-effect {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n","size_bytes":4908},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/cta-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Rocket, Calendar } from \"lucide-react\";\n\nexport default function CTASection() {\n  return (\n    <section className=\"py-20 gradient-bg\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <h2 className=\"text-3xl sm:text-4xl font-bold text-white mb-6\">\n          Ready to supercharge your search infrastructure?\n        </h2>\n        <p className=\"text-xl text-primary-100 mb-8 max-w-3xl mx-auto\">\n          Join thousands of developers who trust RevaZille for their Elasticsearch needs. \n          Start your free trial today and experience the difference.\n        </p>\n        \n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n          <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-50 text-lg px-8 py-4\">\n            <Rocket className=\"mr-2 h-5 w-5\" />\n            Start Free Trial\n          </Button>\n          <Button size=\"lg\" variant=\"outline\" className=\"border-2 border-white text-white hover:bg-white/10 text-lg px-8 py-4\">\n            <Calendar className=\"mr-2 h-5 w-5\" />\n            Schedule Demo\n          </Button>\n        </div>\n        \n        <div className=\"mt-8 text-primary-200 text-sm\">\n          No credit card required • 14-day free trial • Cancel anytime\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1381},"client/src/components/dashboard-preview.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Gauge, Sliders, TrendingUp, Users, BarChart3, User } from \"lucide-react\";\n\nexport default function DashboardPreview() {\n  const features = [\n    {\n      icon: Gauge,\n      title: \"Performance Monitoring\",\n      description: \"Real-time cluster health, JVM metrics, search latency (p95/p99), and resource utilization with ML-based anomaly detection.\"\n    },\n    {\n      icon: Sliders,\n      title: \"Infrastructure Management\",\n      description: \"Auto-scaling policies, hot-warm-cold tier management, snapshot schedules, and security policy configuration via UI.\"\n    },\n    {\n      icon: TrendingUp,\n      title: \"Query & Index Analytics\",\n      description: \"Query performance profiling, slow query analysis, index size optimization, and shard allocation insights.\"\n    },\n    {\n      icon: Users,\n      title: \"Multi-tenant Operations\",\n      description: \"RBAC with field-level security, audit logging, cost allocation by team, and cross-cluster search management.\"\n    }\n  ];\n\n  return (\n    <section id=\"dashboard\" className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            Powerful \n            <span className=\"gradient-text\"> management dashboard</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Monitor, manage, and scale your Elasticsearch clusters with our intuitive dashboard. \n            Real-time metrics, automated alerts, and self-service controls.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          <div>\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">Everything at your fingertips</h3>\n            \n            <div className=\"space-y-6\">\n              {features.map((feature, index) => (\n                <div key={index} className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <feature.icon className=\"h-6 w-6 text-primary-600\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-gray-900 mb-2\">{feature.title}</h4>\n                    <p className=\"text-gray-600\">{feature.description}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"mt-8\">\n              <Button className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Try Dashboard\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"relative\">\n            {/* Dashboard mockup */}\n            <Card className=\"overflow-hidden shadow-2xl border border-gray-200\">\n              {/* Dashboard header */}\n              <div className=\"bg-gray-900 px-6 py-4 flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4\">\n                  <h4 className=\"text-white font-semibold\">RevaZille Dashboard</h4>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center\">\n                    <User className=\"h-4 w-4 text-white\" />\n                  </div>\n                </div>\n              </div>\n              \n              {/* Dashboard content */}\n              <CardContent className=\"p-6\">\n                {/* Quick stats */}\n                <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                  <div className=\"bg-gradient-to-r from-green-400 to-green-500 rounded-lg p-4 text-white\">\n                    <div className=\"text-2xl font-bold\">12</div>\n                    <div className=\"text-green-100 text-sm\">Active Clusters</div>\n                    <div className=\"text-xs text-green-200 mt-1\">3 auto-scaling</div>\n                  </div>\n                  <div className=\"bg-gradient-to-r from-blue-400 to-blue-500 rounded-lg p-4 text-white\">\n                    <div className=\"text-2xl font-bold\">142ms</div>\n                    <div className=\"text-blue-100 text-sm\">Avg Query Time</div>\n                    <div className=\"text-xs text-blue-200 mt-1\">P95: 245ms</div>\n                  </div>\n                </div>\n                \n                {/* Chart placeholder */}\n                <div className=\"bg-gray-50 rounded-lg p-6 mb-6\">\n                  <h5 className=\"font-semibold text-gray-800 mb-4\">Performance Metrics</h5>\n                  <div className=\"h-32 bg-gradient-to-r from-primary-200 to-primary-300 rounded opacity-60 flex items-center justify-center\">\n                    <BarChart3 className=\"h-12 w-12 text-primary-600\" />\n                  </div>\n                </div>\n                \n                {/* Cluster list */}\n                <div className=\"space-y-3\">\n                  <h5 className=\"font-semibold text-gray-800\">Cluster Health & Alerts</h5>\n                  <div className=\"bg-gray-50 rounded-lg p-3 flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-3 h-3 bg-green-400 rounded-full\"></div>\n                      <div>\n                        <span className=\"text-sm font-medium\">prod-search-01</span>\n                        <div className=\"text-xs text-gray-600\">3 nodes • 500GB • AWS us-east-1</div>\n                      </div>\n                    </div>\n                    <span className=\"text-xs text-green-600 font-medium\">Healthy</span>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-3 flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-3 h-3 bg-yellow-400 rounded-full\"></div>\n                      <div>\n                        <span className=\"text-sm font-medium\">analytics-dev</span>\n                        <div className=\"text-xs text-gray-600\">ML job running • High CPU usage</div>\n                      </div>\n                    </div>\n                    <span className=\"text-xs text-yellow-600 font-medium\">Scaling</span>\n                  </div>\n                  <div className=\"bg-gray-50 rounded-lg p-3 flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-3 h-3 bg-purple-400 rounded-full\"></div>\n                      <div>\n                        <span className=\"text-sm font-medium\">logs-retention</span>\n                        <div className=\"text-xs text-gray-600\">Hot-warm tier • Snapshot in progress</div>\n                      </div>\n                    </div>\n                    <span className=\"text-xs text-purple-600 font-medium\">Archiving</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7219},"client/src/components/features-section.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Search, Shield, BarChart3, Settings, History, Headphones, Cloud, CheckCircle, Eye, Sliders } from \"lucide-react\";\n\nexport default function FeaturesSection() {\n  const features = [\n    {\n      icon: Search,\n      title: \"Production-Ready Elasticsearch\",\n      description: \"Deploy clusters with hot-warm-cold architecture, auto-scaling from 1GB to 10TB+, and sub-second query performance optimized for your workload.\"\n    },\n    {\n      icon: Shield,\n      title: \"Zero-Trust Security\",\n      description: \"RBAC, field-level security, SAML/LDAP integration, network isolation, and compliance certifications (SOC2, ISO27001, GDPR).\"\n    },\n    {\n      icon: BarChart3,\n      title: \"Advanced Machine Learning\",\n      description: \"Anomaly detection, forecasting, and classification models with built-in Kibana ML jobs for real-time insights and alerting.\"\n    },\n    {\n      icon: Settings,\n      title: \"Infrastructure as Code\",\n      description: \"Deploy via Terraform, ARM templates, or REST APIs with customizable index templates, ingest pipelines, and retention policies.\"\n    },\n    {\n      icon: History,\n      title: \"Enterprise Operations\",\n      description: \"Automated snapshots to S3/Azure/GCS, cross-cluster replication, rolling upgrades, and performance monitoring with alerting.\"\n    },\n    {\n      icon: Headphones,\n      title: \"Expert Professional Services\",\n      description: \"Migration assistance, performance tuning, custom integrations, and 24/7 support from certified Elasticsearch engineers.\"\n    }\n  ];\n\n  const cloudProviders = [\n    {\n      icon: Cloud,\n      name: \"RevaLogix Private Cloud\",\n      description: \"Full control, low latency\"\n    },\n    {\n      icon: Cloud,\n      name: \"AWS\",\n      description: \"Trusted by enterprise clients\"\n    },\n    {\n      icon: Cloud,\n      name: \"Azure\",\n      description: \"Ideal for Microsoft ecosystems\"\n    },\n    {\n      icon: Cloud,\n      name: \"GCP\",\n      description: \"Analytics-heavy workloads\"\n    }\n  ];\n\n  return (\n    <section id=\"features\" className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            Everything you need for \n            <span className=\"gradient-text\"> enterprise search</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            From quick deployment to advanced configuration, RevaZille provides all the tools \n            your team needs to build powerful search and analytics solutions.\n          </p>\n        </div>\n        \n        {/* Main Features Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          {features.map((feature, index) => (\n            <Card key={index} className=\"bg-gray-50 hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center mb-4\">\n                  <feature.icon className=\"h-6 w-6 text-primary-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{feature.title}</h3>\n                <p className=\"text-gray-600\">{feature.description}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        \n        {/* Multi-Cloud Section */}\n        <div className=\"gradient-bg rounded-2xl p-8 text-white\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center\">\n            <div>\n              <h3 className=\"text-2xl font-bold mb-4\">Multi-Cloud, Multi-Flexibility</h3>\n              <p className=\"text-primary-100 mb-6 text-lg\">\n                Deploy across our private cloud or choose from AWS, Azure, and Google Cloud. \n                Optimize for cost, performance, and compliance — all from one platform.\n              </p>\n              <ul className=\"space-y-3\">\n                {cloudProviders.map((provider, index) => (\n                  <li key={index} className=\"flex items-center\">\n                    <provider.icon className=\"h-5 w-5 text-primary-200 mr-3\" />\n                    <span><strong>{provider.name}:</strong> {provider.description}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"bg-white/10 rounded-xl p-6 backdrop-blur-sm\">\n              <h4 className=\"font-semibold mb-4\">Unified Management Portal</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between bg-white/20 rounded-lg p-3\">\n                  <span className=\"text-sm\">Real-time Metrics</span>\n                  <BarChart3 className=\"h-4 w-4\" />\n                </div>\n                <div className=\"flex items-center justify-between bg-white/20 rounded-lg p-3\">\n                  <span className=\"text-sm\">Self-service Controls</span>\n                  <Sliders className=\"h-4 w-4\" />\n                </div>\n                <div className=\"flex items-center justify-between bg-white/20 rounded-lg p-3\">\n                  <span className=\"text-sm\">Cross-cloud Visibility</span>\n                  <Eye className=\"h-4 w-4\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5444},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Building } from \"lucide-react\";\n\nexport default function Footer() {\n  const productLinks = [\n    { title: \"Elasticsearch\", href: \"/elasticsearch\" },\n    { title: \"Kibana\", href: \"/kibana\" },\n    { title: \"Machine Learning\", href: \"/machine-learning\" },\n    { title: \"Security\", href: \"/security\" }\n  ];\n\n  const solutionLinks = [\n    { title: \"Search Applications\", href: \"/solutions/search\" },\n    { title: \"Observability\", href: \"/solutions/observability\" },\n    { title: \"Security Analytics\", href: \"/solutions/security\" },\n    { title: \"Enterprise Search\", href: \"/solutions/enterprise\" }\n  ];\n\n  const companyLinks = [\n    { title: \"About Us\", href: \"/about\" },\n    { title: \"Careers\", href: \"/careers\" },\n    { title: \"Contact\", href: \"/contact\" },\n    { title: \"Support\", href: \"/support\" }\n  ];\n\n  const resourceLinks = [\n    { title: \"Documentation\", href: \"/docs\" },\n    { title: \"Case Studies\", href: \"/case-studies\" },\n    { title: \"Migration Guide\", href: \"/migration\" },\n    { title: \"Blog\", href: \"/blog\" }\n  ];\n\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-8\">\n          {/* Company Info */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"flex items-center mb-4\">\n              <Building className=\"h-8 w-8 text-primary-400 mr-3\" />\n              <div>\n                <h3 className=\"text-xl font-bold text-white\">RevaZille</h3>\n                <p className=\"text-sm text-gray-400\">by RevaLogix</p>\n              </div>\n            </div>\n            <p className=\"text-gray-400 text-sm mb-4\">\n              Fully managed Elasticsearch cloud service with enterprise-grade security, \n              performance, and support across multiple cloud providers.\n            </p>\n            <p className=\"text-gray-500 text-xs\">\n              © 2025 RevaLogix. All rights reserved.\n            </p>\n          </div>\n\n          {/* Products */}\n          <div>\n            <h4 className=\"font-semibold text-white mb-4\">Products</h4>\n            <ul className=\"space-y-2\">\n              {productLinks.map((link, index) => (\n                <li key={index}>\n                  <Link \n                    href={link.href}\n                    className=\"text-gray-400 hover:text-white transition-colors text-sm\"\n                  >\n                    {link.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Solutions */}\n          <div>\n            <h4 className=\"font-semibold text-white mb-4\">Solutions</h4>\n            <ul className=\"space-y-2\">\n              {solutionLinks.map((link, index) => (\n                <li key={index}>\n                  <Link \n                    href={link.href}\n                    className=\"text-gray-400 hover:text-white transition-colors text-sm\"\n                  >\n                    {link.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Resources */}\n          <div>\n            <h4 className=\"font-semibold text-white mb-4\">Resources</h4>\n            <ul className=\"space-y-2\">\n              {resourceLinks.map((link, index) => (\n                <li key={index}>\n                  <Link \n                    href={link.href}\n                    className=\"text-gray-400 hover:text-white transition-colors text-sm\"\n                  >\n                    {link.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Company */}\n          <div>\n            <h4 className=\"font-semibold text-white mb-4\">Company</h4>\n            <ul className=\"space-y-2\">\n              {companyLinks.map((link, index) => (\n                <li key={index}>\n                  <Link \n                    href={link.href}\n                    className=\"text-gray-400 hover:text-white transition-colors text-sm\"\n                  >\n                    {link.title}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-800 mt-8 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <div className=\"flex space-x-6 text-sm text-gray-400 mb-4 md:mb-0\">\n              <Link href=\"/privacy\" className=\"hover:text-white transition-colors\">\n                Privacy Policy\n              </Link>\n              <Link href=\"/terms\" className=\"hover:text-white transition-colors\">\n                Terms of Service\n              </Link>\n              <Link href=\"/security\" className=\"hover:text-white transition-colors\">\n                Security\n              </Link>\n            </div>\n            <div className=\"text-sm text-gray-400\">\n              Made with ❤️ for enterprise search and analytics\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":5095},"client/src/components/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Server, Database, TrendingUp, Users, Rocket, Play } from \"lucide-react\";\n\nexport default function HeroSection() {\n  return (\n    <section id=\"home\" className=\"pt-16 hero-gradient\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 sm:py-32\">\n        <div className=\"text-center\">\n          <h1 className=\"text-4xl sm:text-5xl lg:text-6xl font-bold text-gray-900 mb-6\">\n            Fully Managed\n            <span className=\"gradient-text\"> Elasticsearch</span>\n            <br />in the Cloud\n          </h1>\n          <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto leading-relaxed\">\n            Deploy enterprise-grade Elasticsearch clusters with advanced machine learning, real-time analytics, \n            and security features. Get production-ready infrastructure in minutes with 99.99% SLA-backed uptime \n            across AWS, Azure, GCP, and our private cloud.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center mb-12\">\n            <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600 text-lg px-8 py-4\">\n              <Rocket className=\"mr-2 h-5 w-5\" />\n              Start Free Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-2 border-primary-500 text-primary-600 hover:bg-primary-50 text-lg px-8 py-4\">\n              <Play className=\"mr-2 h-5 w-5\" />\n              Watch Demo\n            </Button>\n          </div>\n          \n          {/* Cloud Provider Logos */}\n          <div className=\"flex flex-wrap justify-center items-center gap-8 opacity-60 mb-16\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-orange-500 rounded flex items-center justify-center text-white font-bold text-sm\">\n                AWS\n              </div>\n              <span className=\"font-medium\">AWS</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-blue-500 rounded flex items-center justify-center text-white font-bold text-sm\">\n                Az\n              </div>\n              <span className=\"font-medium\">Azure</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-green-500 rounded flex items-center justify-center text-white font-bold text-sm\">\n                G\n              </div>\n              <span className=\"font-medium\">GCP</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-primary-500 rounded flex items-center justify-center text-white font-bold text-sm\">\n                R\n              </div>\n              <span className=\"font-medium\">RevaLogix Cloud</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Hero Dashboard Preview */}\n        <div className=\"relative\">\n          <Card className=\"overflow-hidden shadow-2xl border border-gray-200\">\n            {/* Browser mockup header */}\n            <div className=\"bg-gray-100 px-4 py-3 flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-red-400 rounded-full\"></div>\n              <div className=\"w-3 h-3 bg-yellow-400 rounded-full\"></div>\n              <div className=\"w-3 h-3 bg-green-400 rounded-full\"></div>\n              <div className=\"flex-1 mx-4\">\n                <div className=\"bg-white rounded-md px-3 py-1 text-sm text-gray-600\">\n                  dashboard.revazille.com\n                </div>\n              </div>\n            </div>\n            \n            {/* Dashboard content preview */}\n            <CardContent className=\"p-6 bg-gray-50\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n                <Card className=\"shadow-sm\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h3 className=\"font-semibold text-gray-800\">Active Clusters</h3>\n                      <Server className=\"h-5 w-5 text-primary-500\" />\n                    </div>\n                    <div className=\"text-3xl font-bold text-primary-600\">12</div>\n                    <div className=\"text-sm text-gray-600\">2 pending deployment</div>\n                  </CardContent>\n                </Card>\n                \n                <Card className=\"shadow-sm\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h3 className=\"font-semibold text-gray-800\">Total Storage</h3>\n                      <Database className=\"h-5 w-5 text-green-500\" />\n                    </div>\n                    <div className=\"text-3xl font-bold text-green-600\">2.4TB</div>\n                    <div className=\"text-sm text-gray-600\">85% utilized</div>\n                  </CardContent>\n                </Card>\n                \n                <Card className=\"shadow-sm\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h3 className=\"font-semibold text-gray-800\">Uptime</h3>\n                      <TrendingUp className=\"h-5 w-5 text-blue-500\" />\n                    </div>\n                    <div className=\"text-3xl font-bold text-blue-600\">99.9%</div>\n                    <div className=\"text-sm text-gray-600\">Last 30 days</div>\n                  </CardContent>\n                </Card>\n              </div>\n              \n              <Card>\n                <CardContent className=\"p-4\">\n                  <h3 className=\"font-semibold text-gray-800 mb-3\">Recent Clusters</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-green-400 rounded-full\"></div>\n                        <div>\n                          <div className=\"font-medium\">production-search</div>\n                          <div className=\"text-sm text-gray-600\">AWS US-East-1</div>\n                        </div>\n                      </div>\n                      <span className=\"text-sm text-gray-500\">Running</span>\n                    </div>\n                    <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-md\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"w-3 h-3 bg-yellow-400 rounded-full\"></div>\n                        <div>\n                          <div className=\"font-medium\">analytics-dev</div>\n                          <div className=\"text-sm text-gray-600\">GCP Europe-West</div>\n                        </div>\n                      </div>\n                      <span className=\"text-sm text-gray-500\">Deploying</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7261},"client/src/components/migration-integration.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  ArrowRightLeft, \n  TrendingDown, \n  CheckCircle, \n  Clock,\n  Shield,\n  Database,\n  Zap\n} from \"lucide-react\";\n\nexport default function MigrationIntegration() {\n  const migrationPaths = [\n    {\n      from: \"Splunk\",\n      logo: \"S\",\n      logoColor: \"bg-black\",\n      savings: \"Up to 60%\",\n      timeframe: \"2-4 weeks\",\n      features: [\n        \"SPL to Elasticsearch query translation\",\n        \"Dashboard and alert migration\",\n        \"Historical data transfer with validation\",\n        \"User training and knowledge transfer\"\n      ]\n    },\n    {\n      from: \"New Relic\",\n      logo: \"NR\",\n      logoColor: \"bg-green-600\",\n      savings: \"Up to 50%\",\n      timeframe: \"1-3 weeks\",\n      features: [\n        \"APM data pipeline migration\",\n        \"Infrastructure monitoring setup\",\n        \"Custom dashboards recreation\",\n        \"Alert policy conversion\"\n      ]\n    },\n    {\n      from: \"Datadog\",\n      logo: \"DD\",\n      logoColor: \"bg-purple-600\",\n      savings: \"Up to 45%\",\n      timeframe: \"2-3 weeks\",\n      features: [\n        \"Metrics and log aggregation migration\",\n        \"Custom dashboard conversion\",\n        \"Monitoring and alerting setup\",\n        \"Cost optimization analysis\"\n      ]\n    },\n    {\n      from: \"Self-hosted ELK\",\n      logo: \"ELK\",\n      logoColor: \"bg-yellow-600\",\n      savings: \"Operational efficiency\",\n      timeframe: \"1-2 weeks\",\n      features: [\n        \"Cluster configuration migration\",\n        \"Index template and mapping transfer\",\n        \"Plugin and integration setup\",\n        \"Performance optimization\"\n      ]\n    }\n  ];\n\n  const integrationOptions = [\n    {\n      icon: Database,\n      title: \"Data Sources\",\n      description: \"Connect 200+ data sources and platforms\",\n      integrations: [\"AWS CloudWatch\", \"Azure Monitor\", \"Google Cloud Logging\", \"Kubernetes\", \"Docker\", \"Apache Kafka\"]\n    },\n    {\n      icon: Shield,\n      title: \"Security Tools\",\n      description: \"Integrate with existing security infrastructure\",\n      integrations: [\"CrowdStrike\", \"Splunk Phantom\", \"IBM QRadar\", \"Palo Alto\", \"Fortinet\", \"Check Point\"]\n    },\n    {\n      icon: Zap,\n      title: \"DevOps Tools\",\n      description: \"Seamless CI/CD and infrastructure integration\",\n      integrations: [\"Jenkins\", \"GitLab\", \"Terraform\", \"Ansible\", \"Prometheus\", \"Grafana\"]\n    }\n  ];\n\n  return (\n    <section className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            Seamless \n            <span className=\"gradient-text\"> migration & integration</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Migrate from existing solutions with minimal downtime and risk. Our certified experts \n            handle the entire process while you focus on your business.\n          </p>\n        </div>\n\n        {/* Migration Paths */}\n        <div className=\"mb-16\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">\n            Proven Migration Paths\n          </h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {migrationPaths.map((path, index) => (\n              <Card key={index} className=\"border border-gray-200 shadow-sm hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center\">\n                      <div className={`w-10 h-10 ${path.logoColor} rounded-lg flex items-center justify-center mr-3`}>\n                        <span className=\"text-white font-bold text-sm\">{path.logo}</span>\n                      </div>\n                      <ArrowRightLeft className=\"h-5 w-5 text-gray-400 mx-2\" />\n                      <div className=\"w-10 h-10 bg-primary-500 rounded-lg flex items-center justify-center\">\n                        <span className=\"text-white font-bold text-sm\">RZ</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <h4 className=\"font-semibold text-gray-900 mb-2\">From {path.from}</h4>\n                  \n                  <div className=\"flex items-center justify-between mb-4\">\n                    <Badge variant=\"outline\" className=\"text-green-600 border-green-300\">\n                      <TrendingDown className=\"h-3 w-3 mr-1\" />\n                      {path.savings}\n                    </Badge>\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <Clock className=\"h-4 w-4 mr-1\" />\n                      {path.timeframe}\n                    </div>\n                  </div>\n                  \n                  <ul className=\"space-y-2 text-sm text-gray-600\">\n                    {path.features.slice(0, 2).map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-start\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2 mt-0.5 flex-shrink-0\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                  \n                  <Button variant=\"outline\" className=\"w-full mt-4 text-primary-600 border-primary-300 hover:bg-primary-50\">\n                    Learn More\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Integration Options */}\n        <div className=\"bg-gray-50 rounded-2xl p-8\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">\n            Enterprise Integrations\n          </h3>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {integrationOptions.map((option, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <option.icon className=\"h-8 w-8 text-primary-600\" />\n                </div>\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">{option.title}</h4>\n                <p className=\"text-gray-600 mb-4\">{option.description}</p>\n                \n                <div className=\"flex flex-wrap justify-center gap-2\">\n                  {option.integrations.map((integration, integrationIndex) => (\n                    <Badge key={integrationIndex} variant=\"outline\" className=\"text-xs\">\n                      {integration}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Migration Process */}\n        <div className=\"mt-16 text-center\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-8\">\n            Zero-Risk Migration Process\n          </h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n            <div className=\"relative\">\n              <div className=\"w-12 h-12 bg-primary-500 rounded-full flex items-center justify-center mx-auto mb-4 text-white font-bold\">\n                1\n              </div>\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Assessment</h4>\n              <p className=\"text-sm text-gray-600\">Analyze current infrastructure and create migration plan</p>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"w-12 h-12 bg-primary-500 rounded-full flex items-center justify-center mx-auto mb-4 text-white font-bold\">\n                2\n              </div>\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Setup</h4>\n              <p className=\"text-sm text-gray-600\">Deploy RevaZille environment with optimized configuration</p>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"w-12 h-12 bg-primary-500 rounded-full flex items-center justify-center mx-auto mb-4 text-white font-bold\">\n                3\n              </div>\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Migration</h4>\n              <p className=\"text-sm text-gray-600\">Transfer data and configurations with validation</p>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"w-12 h-12 bg-primary-500 rounded-full flex items-center justify-center mx-auto mb-4 text-white font-bold\">\n                4\n              </div>\n              <h4 className=\"font-semibold text-gray-900 mb-2\">Optimization</h4>\n              <p className=\"text-sm text-gray-600\">Fine-tune performance and train your team</p>\n            </div>\n          </div>\n          \n          <div className=\"mt-8\">\n            <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n              Schedule Migration Assessment\n            </Button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":9213},"client/src/components/navigation.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu, X, ChevronDown } from \"lucide-react\";\nimport { Link, useLocation } from \"wouter\";\n\nexport default function Navigation() {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [openDropdown, setOpenDropdown] = useState<string | null>(null);\n  const [location] = useLocation();\n  \n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setOpenDropdown(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      const offsetTop = element.offsetTop - 80;\n      window.scrollTo({\n        top: offsetTop,\n        behavior: 'smooth'\n      });\n      setIsMenuOpen(false);\n    }\n  };\n\n  const toggleDropdown = (dropdownName: string) => {\n    setOpenDropdown(openDropdown === dropdownName ? null : dropdownName);\n  };\n\n  const productMenuItems = [\n    { title: \"Elasticsearch\", description: \"Search and analytics engine\", href: \"/elasticsearch\" },\n    { title: \"Kibana\", description: \"Data visualization and exploration\", href: \"/kibana\" },\n    { title: \"Machine Learning\", description: \"AI-powered analytics\", href: \"/machine-learning\" },\n    { title: \"Security\", description: \"SIEM and threat detection\", href: \"/security\" }\n  ];\n\n  const solutionsMenuItems = [\n    { title: \"Search Applications\", description: \"Build powerful search experiences\", href: \"/solutions/search\" },\n    { title: \"Observability\", description: \"Monitor and troubleshoot\", href: \"/solutions/observability\" },\n    { title: \"Security Analytics\", description: \"Detect and respond to threats\", href: \"/solutions/security\" },\n    { title: \"Enterprise Search\", description: \"Find information across your organization\", href: \"/solutions/enterprise\" }\n  ];\n\n  const resourcesMenuItems = [\n    { title: \"Documentation\", description: \"Guides and API references\", href: \"/docs\" },\n    { title: \"Case Studies\", description: \"Customer success stories\", href: \"/case-studies\" },\n    { title: \"Migration Guide\", description: \"Move from other platforms\", href: \"/migration\" },\n    { title: \"Support\", description: \"Get help when you need it\", href: \"/support\" }\n  ];\n\n  return (\n    <nav className=\"fixed top-0 w-full bg-white/95 backdrop-blur-md border-b border-gray-200 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex-shrink-0\">\n              <h1 className=\"text-2xl font-bold gradient-text\">RevaZille</h1>\n              <span className=\"text-xs text-gray-500\">by RevaLogix</span>\n            </div>\n          </div>\n          \n          <div className=\"hidden md:block\" ref={dropdownRef}>\n            <div className=\"flex items-center space-x-8\">\n              <Link href=\"/\" className={`text-gray-700 hover:text-primary-600 transition-colors font-medium ${location === '/' ? 'text-primary-600' : ''}`}>\n                Home\n              </Link>\n              \n              {/* Products Dropdown */}\n              <div className=\"relative\">\n                <button \n                  onClick={() => toggleDropdown('products')}\n                  className=\"flex items-center text-gray-700 hover:text-primary-600 transition-colors font-medium\"\n                >\n                  Products\n                  <ChevronDown className={`ml-1 h-4 w-4 transition-transform ${openDropdown === 'products' ? 'rotate-180' : ''}`} />\n                </button>\n                {openDropdown === 'products' && (\n                  <div className=\"absolute top-full left-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                    <div className=\"p-4\">\n                      {productMenuItems.map((item, index) => (\n                        <Link \n                          key={index} \n                          href={item.href}\n                          className=\"block p-3 rounded-lg hover:bg-gray-50 transition-colors\"\n                          onClick={() => setOpenDropdown(null)}\n                        >\n                          <div className=\"font-medium text-gray-900\">{item.title}</div>\n                          <div className=\"text-sm text-gray-600\">{item.description}</div>\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Solutions Dropdown */}\n              <div className=\"relative\">\n                <button \n                  onClick={() => toggleDropdown('solutions')}\n                  className=\"flex items-center text-gray-700 hover:text-primary-600 transition-colors font-medium\"\n                >\n                  Solutions\n                  <ChevronDown className={`ml-1 h-4 w-4 transition-transform ${openDropdown === 'solutions' ? 'rotate-180' : ''}`} />\n                </button>\n                {openDropdown === 'solutions' && (\n                  <div className=\"absolute top-full left-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                    <div className=\"p-4\">\n                      {solutionsMenuItems.map((item, index) => (\n                        <Link \n                          key={index} \n                          href={item.href}\n                          className=\"block p-3 rounded-lg hover:bg-gray-50 transition-colors\"\n                          onClick={() => setOpenDropdown(null)}\n                        >\n                          <div className=\"font-medium text-gray-900\">{item.title}</div>\n                          <div className=\"text-sm text-gray-600\">{item.description}</div>\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              <Link href=\"/pricing\" className={`text-gray-700 hover:text-primary-600 transition-colors font-medium ${location === '/pricing' ? 'text-primary-600' : ''}`}>\n                Pricing\n              </Link>\n\n              {/* Resources Dropdown */}\n              <div className=\"relative\">\n                <button \n                  onClick={() => toggleDropdown('resources')}\n                  className=\"flex items-center text-gray-700 hover:text-primary-600 transition-colors font-medium\"\n                >\n                  Resources\n                  <ChevronDown className={`ml-1 h-4 w-4 transition-transform ${openDropdown === 'resources' ? 'rotate-180' : ''}`} />\n                </button>\n                {openDropdown === 'resources' && (\n                  <div className=\"absolute top-full left-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 z-50\">\n                    <div className=\"p-4\">\n                      {resourcesMenuItems.map((item, index) => (\n                        <Link \n                          key={index} \n                          href={item.href}\n                          className=\"block p-3 rounded-lg hover:bg-gray-50 transition-colors\"\n                          onClick={() => setOpenDropdown(null)}\n                        >\n                          <div className=\"font-medium text-gray-900\">{item.title}</div>\n                          <div className=\"text-sm text-gray-600\">{item.description}</div>\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n              \n              <Button className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start Free Trial\n              </Button>\n            </div>\n          </div>\n          \n          <div className=\"md:hidden\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n            >\n              {isMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </Button>\n          </div>\n        </div>\n      </div>\n      \n      {isMenuOpen && (\n        <div className=\"md:hidden bg-white border-t border-gray-200\">\n          <div className=\"px-4 py-2 space-y-2\">\n            <Link href=\"/\" className=\"block text-gray-700 hover:text-primary-600 font-medium py-2\" onClick={() => setIsMenuOpen(false)}>\n              Home\n            </Link>\n            \n            <div className=\"border-t border-gray-100 pt-2\">\n              <div className=\"text-sm font-medium text-gray-500 mb-2\">Products</div>\n              {productMenuItems.map((item, index) => (\n                <Link \n                  key={index}\n                  href={item.href} \n                  className=\"block pl-4 py-2 text-gray-700 hover:text-primary-600\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {item.title}\n                </Link>\n              ))}\n            </div>\n\n            <div className=\"border-t border-gray-100 pt-2\">\n              <div className=\"text-sm font-medium text-gray-500 mb-2\">Solutions</div>\n              {solutionsMenuItems.map((item, index) => (\n                <Link \n                  key={index}\n                  href={item.href} \n                  className=\"block pl-4 py-2 text-gray-700 hover:text-primary-600\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {item.title}\n                </Link>\n              ))}\n            </div>\n\n            <div className=\"border-t border-gray-100 pt-2\">\n              <Link href=\"/pricing\" className=\"block text-gray-700 hover:text-primary-600 font-medium py-2\" onClick={() => setIsMenuOpen(false)}>\n                Pricing\n              </Link>\n            </div>\n\n            <div className=\"border-t border-gray-100 pt-2\">\n              <div className=\"text-sm font-medium text-gray-500 mb-2\">Resources</div>\n              {resourcesMenuItems.map((item, index) => (\n                <Link \n                  key={index}\n                  href={item.href} \n                  className=\"block pl-4 py-2 text-gray-700 hover:text-primary-600\"\n                  onClick={() => setIsMenuOpen(false)}\n                >\n                  {item.title}\n                </Link>\n              ))}\n            </div>\n\n            <div className=\"pt-4\">\n              <Button className=\"w-full bg-primary-500 text-white hover:bg-primary-600\">\n                Start Free Trial\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n","size_bytes":10885},"client/src/components/pricing-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Check, Shield, Clock, RotateCcw } from \"lucide-react\";\n\nexport default function PricingSection() {\n  const plans = [\n    {\n      name: \"Developer\",\n      description: \"Perfect for development and testing\",\n      price: \"Free\",\n      period: \"/month\",\n      features: [\n        \"1 Elasticsearch cluster (up to 3 nodes)\",\n        \"8GB RAM, 2 vCPU, 32GB SSD storage\",\n        \"Basic Kibana dashboard and monitoring\",\n        \"Community support and documentation\",\n        \"99% uptime SLA with standard recovery\"\n      ],\n      buttonText: \"Start Free\",\n      buttonVariant: \"outline\" as const,\n      popular: false\n    },\n    {\n      name: \"Production\",\n      description: \"For production workloads and teams\",\n      price: \"$299\",\n      period: \"/month\",\n      features: [\n        \"Up to 10 clusters with auto-scaling\",\n        \"32GB RAM, 8 vCPU, 500GB SSD per node\",\n        \"Advanced Kibana ML, alerting, and security\",\n        \"24/7 priority support with 4-hour SLA\",\n        \"99.9% uptime SLA with automated failover\",\n        \"Multi-cloud deployment and VPC peering\"\n      ],\n      buttonText: \"Start Trial\",\n      buttonVariant: \"default\" as const,\n      popular: true\n    },\n    {\n      name: \"Enterprise\",\n      description: \"Mission-critical at scale\",\n      price: \"Custom\",\n      period: \" pricing\",\n      features: [\n        \"Unlimited clusters with dedicated infrastructure\",\n        \"Custom hardware sizing and hot-warm-cold tiers\",\n        \"Dedicated support team and solution architect\",\n        \"99.99% uptime SLA with sub-1min recovery\",\n        \"Advanced security: RBAC, SAML, audit logging\",\n        \"Professional services and migration assistance\"\n      ],\n      buttonText: \"Contact Sales\",\n      buttonVariant: \"outline\" as const,\n      popular: false\n    }\n  ];\n\n  return (\n    <section id=\"pricing\" className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            Simple, transparent \n            <span className=\"gradient-text\"> pricing</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Start with our free tier and scale as you grow. All plans include SLA-backed support and uptime guarantees.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n          {plans.map((plan, index) => (\n            <Card \n              key={index} \n              className={`relative ${plan.popular ? 'bg-primary-500 text-white border-2 border-primary-400 shadow-lg' : 'bg-white shadow-sm border border-gray-200'}`}\n            >\n              {plan.popular && (\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                  <span className=\"bg-primary-600 text-white px-4 py-1 rounded-full text-sm font-semibold\">\n                    Most Popular\n                  </span>\n                </div>\n              )}\n              \n              <CardHeader className=\"text-center pb-6\">\n                <CardTitle className={`text-2xl font-bold mb-2 ${plan.popular ? 'text-white' : 'text-gray-900'}`}>\n                  {plan.name}\n                </CardTitle>\n                <p className={`mb-4 ${plan.popular ? 'text-primary-100' : 'text-gray-600'}`}>\n                  {plan.description}\n                </p>\n                <div className={`text-4xl font-bold ${plan.popular ? 'text-white' : 'text-gray-900'}`}>\n                  {plan.price}\n                  <span className={`text-lg font-normal ${plan.popular ? 'text-primary-200' : 'text-gray-600'}`}>\n                    {plan.period}\n                  </span>\n                </div>\n              </CardHeader>\n              \n              <CardContent>\n                <ul className={`space-y-3 mb-8 ${plan.popular ? 'text-white' : 'text-gray-900'}`}>\n                  {plan.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-center\">\n                      <Check className={`mr-3 h-5 w-5 ${plan.popular ? 'text-primary-200' : 'text-green-500'}`} />\n                      <span>{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n                \n                <Button \n                  className={`w-full py-3 font-semibold ${\n                    plan.popular \n                      ? 'bg-white text-primary-600 hover:bg-gray-50' \n                      : plan.buttonVariant === 'outline'\n                        ? 'border-2 border-primary-500 text-primary-600 hover:bg-primary-50'\n                        : 'bg-primary-500 text-white hover:bg-primary-600'\n                  }`}\n                  variant={plan.popular ? \"secondary\" : plan.buttonVariant}\n                >\n                  {plan.buttonText}\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        \n        {/* Additional Pricing Info */}\n        <div className=\"mt-12 text-center\">\n          <p className=\"text-gray-600 mb-4\">\n            All plans include SSL encryption, automated backups, and 24/7 monitoring\n          </p>\n          <div className=\"flex flex-wrap justify-center gap-6 text-sm text-gray-500\">\n            <span className=\"flex items-center\">\n              <Shield className=\"mr-2 h-4 w-4\" />\n              Enterprise-grade security\n            </span>\n            <span className=\"flex items-center\">\n              <Clock className=\"mr-2 h-4 w-4\" />\n              No setup fees\n            </span>\n            <span className=\"flex items-center\">\n              <RotateCcw className=\"mr-2 h-4 w-4\" />\n              Cancel anytime\n            </span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5968},"client/src/components/professional-services.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Users, \n  Wrench, \n  TrendingUp, \n  Shield, \n  Database, \n  ArrowRightLeft, \n  CheckCircle,\n  Clock,\n  Award\n} from \"lucide-react\";\n\nexport default function ProfessionalServices() {\n  const services = [\n    {\n      icon: Database,\n      title: \"Implementation & Migration\",\n      description: \"Expert-led deployment and migration from existing solutions\",\n      features: [\n        \"Splunk to Elasticsearch migration with 60% cost savings\",\n        \"New Relic to Elastic Cloud data pipeline setup\",\n        \"Legacy system modernization and data transformation\",\n        \"Zero-downtime migration strategies\"\n      ],\n      popular: false\n    },\n    {\n      icon: TrendingUp,\n      title: \"Performance Optimization\",\n      description: \"Maximize efficiency and reduce operational costs\",\n      features: [\n        \"Query performance tuning and index optimization\",\n        \"Resource right-sizing and cost optimization\",\n        \"Custom ingest pipeline development\",\n        \"Capacity planning and scaling strategies\"\n      ],\n      popular: true\n    },\n    {\n      icon: Shield,\n      title: \"Security & Compliance\",\n      description: \"Enterprise security implementation and audit\",\n      features: [\n        \"RBAC and field-level security configuration\",\n        \"SAML/LDAP integration and SSO setup\",\n        \"Compliance audit and remediation (SOC2, GDPR)\",\n        \"Security monitoring and threat detection\"\n      ],\n      popular: false\n    }\n  ];\n\n  const supportTiers = [\n    {\n      name: \"Standard Support\",\n      response: \"Business hours\",\n      coverage: \"8x5 coverage\",\n      features: [\"Email & ticket support\", \"Community resources\", \"Documentation access\"]\n    },\n    {\n      name: \"Priority Support\",\n      response: \"< 4 hours\",\n      coverage: \"24x7 coverage\",\n      features: [\"Phone & email support\", \"Named support engineer\", \"Health checks\"]\n    },\n    {\n      name: \"Enterprise Support\",\n      response: \"< 1 hour\",\n      coverage: \"24x7 coverage\",\n      features: [\"Dedicated support team\", \"Architecture reviews\", \"Emergency escalation\"]\n    }\n  ];\n\n  return (\n    <section id=\"services\" className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            Professional services by \n            <span className=\"gradient-text\"> certified experts</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Our team of certified Elasticsearch engineers and solution architects \n            ensure successful deployment, optimization, and ongoing operations.\n          </p>\n        </div>\n\n        {/* Professional Services Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-16\">\n          {services.map((service, index) => (\n            <Card key={index} className={`relative ${service.popular ? 'border-2 border-primary-500 shadow-lg' : 'border border-gray-200 shadow-sm'}`}>\n              {service.popular && (\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                  <Badge className=\"bg-primary-500 text-white px-4 py-1\">\n                    Most Popular\n                  </Badge>\n                </div>\n              )}\n              \n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center mb-4\">\n                  <service.icon className=\"h-6 w-6 text-primary-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{service.title}</h3>\n                <p className=\"text-gray-600 mb-6\">{service.description}</p>\n                \n                <ul className=\"space-y-3 mb-6\">\n                  {service.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-start\">\n                      <CheckCircle className=\"h-5 w-5 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                      <span className=\"text-gray-600 text-sm\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n                \n                <Button \n                  className={`w-full ${service.popular ? 'bg-primary-500 text-white hover:bg-primary-600' : 'border border-primary-500 text-primary-600 hover:bg-primary-50'}`}\n                  variant={service.popular ? \"default\" : \"outline\"}\n                >\n                  Get Started\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Expert Team Section */}\n        <div className=\"bg-primary-50 rounded-2xl p-8 mb-16\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center\">\n            <div>\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                Certified Elasticsearch Experts\n              </h3>\n              <p className=\"text-gray-600 mb-6\">\n                Our team holds the highest level of Elasticsearch certifications and has delivered \n                solutions across industries including healthcare, financial services, e-commerce, and technology.\n              </p>\n              \n              <div className=\"grid grid-cols-2 gap-4 mb-6\">\n                <div className=\"flex items-center\">\n                  <Award className=\"h-5 w-5 text-primary-600 mr-2\" />\n                  <span className=\"text-sm font-medium\">Elastic Certified Engineers</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <Users className=\"h-5 w-5 text-primary-600 mr-2\" />\n                  <span className=\"text-sm font-medium\">Solution Architects</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <Clock className=\"h-5 w-5 text-primary-600 mr-2\" />\n                  <span className=\"text-sm font-medium\">24/7 Support Available</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <Wrench className=\"h-5 w-5 text-primary-600 mr-2\" />\n                  <span className=\"text-sm font-medium\">DevOps & DevSecOps</span>\n                </div>\n              </div>\n              \n              <Button className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Consult with Experts\n              </Button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                <h4 className=\"font-semibold text-gray-900 mb-2\">Migration Success Rate</h4>\n                <div className=\"flex items-center\">\n                  <div className=\"bg-green-500 h-2 rounded-full mr-3\" style={{width: '95%'}}></div>\n                  <span className=\"text-sm font-medium text-green-600\">99.5%</span>\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                <h4 className=\"font-semibold text-gray-900 mb-2\">Average Cost Reduction</h4>\n                <div className=\"flex items-center\">\n                  <div className=\"bg-blue-500 h-2 rounded-full mr-3\" style={{width: '60%'}}></div>\n                  <span className=\"text-sm font-medium text-blue-600\">40-60%</span>\n                </div>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-4 shadow-sm\">\n                <h4 className=\"font-semibold text-gray-900 mb-2\">Client Satisfaction</h4>\n                <div className=\"flex items-center\">\n                  <div className=\"bg-purple-500 h-2 rounded-full mr-3\" style={{width: '98%'}}></div>\n                  <span className=\"text-sm font-medium text-purple-600\">4.9/5</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Support Tiers */}\n        <div className=\"text-center mb-8\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">Enterprise Support Options</h3>\n          <p className=\"text-gray-600\">Choose the level of support that matches your business requirements</p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {supportTiers.map((tier, index) => (\n            <Card key={index} className=\"border border-gray-200 shadow-sm\">\n              <CardContent className=\"p-6 text-center\">\n                <h4 className=\"font-semibold text-gray-900 mb-2\">{tier.name}</h4>\n                <div className=\"text-2xl font-bold text-primary-600 mb-1\">{tier.response}</div>\n                <div className=\"text-sm text-gray-600 mb-4\">{tier.coverage}</div>\n                \n                <ul className=\"space-y-2 text-sm text-gray-600\">\n                  {tier.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-center justify-center\">\n                      <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                      {feature}\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":9403},"client/src/components/support-section.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Headphones, Book, MessageCircle } from \"lucide-react\";\n\nexport default function SupportSection() {\n  const supportOptions = [\n    {\n      icon: Headphones,\n      title: \"24/7 Support\",\n      description: \"Get help from our team of Elasticsearch experts around the clock with guaranteed response times.\",\n      linkText: \"Contact Support →\"\n    },\n    {\n      icon: Book,\n      title: \"Documentation\",\n      description: \"Comprehensive guides, API references, and tutorials to help you get the most out of RevaZille.\",\n      linkText: \"Browse Docs →\"\n    },\n    {\n      icon: MessageCircle,\n      title: \"Community\",\n      description: \"Join thousands of developers sharing knowledge, best practices, and solutions in our community forum.\",\n      linkText: \"Join Community →\"\n    }\n  ];\n\n  const faqs = [\n    {\n      question: \"How quickly can I deploy a cluster?\",\n      answer: \"Most clusters are deployed within 5-10 minutes. Complex configurations may take up to 30 minutes.\"\n    },\n    {\n      question: \"Can I migrate existing Elasticsearch data?\",\n      answer: \"Yes, we provide migration tools and expert assistance to help you move your existing data seamlessly.\"\n    },\n    {\n      question: \"What monitoring tools are included?\",\n      answer: \"All plans include real-time monitoring, alerting, and optional Kibana dashboards for visual analytics.\"\n    },\n    {\n      question: \"How does pricing work for multi-cloud?\",\n      answer: \"Pricing is consistent across all cloud providers. You only pay for the resources you use, regardless of the provider.\"\n    },\n    {\n      question: \"What security measures are in place?\",\n      answer: \"All clusters include SSL encryption, IP whitelisting, access controls, and compliance-ready configurations.\"\n    },\n    {\n      question: \"Can I scale my cluster automatically?\",\n      answer: \"Yes, RevaZille supports both manual and automatic scaling based on your performance and usage requirements.\"\n    }\n  ];\n\n  return (\n    <section id=\"support\" className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            Expert \n            <span className=\"gradient-text\"> support</span>\n            when you need it\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Get help from Elasticsearch experts, comprehensive documentation, \n            and a thriving community of developers.\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-16\">\n          {supportOptions.map((option, index) => (\n            <Card key={index} className=\"bg-white shadow-sm\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center mb-4\">\n                  <option.icon className=\"h-6 w-6 text-primary-600\" />\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{option.title}</h3>\n                <p className=\"text-gray-600 mb-4\">{option.description}</p>\n                <a href=\"#\" className=\"text-primary-600 font-semibold hover:text-primary-700\">\n                  {option.linkText}\n                </a>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        \n        {/* FAQ Section */}\n        <Card className=\"p-8\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-8 text-center\">Frequently Asked Questions</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"space-y-6\">\n              {faqs.slice(0, 3).map((faq, index) => (\n                <div key={index}>\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">{faq.question}</h4>\n                  <p className=\"text-gray-600\">{faq.answer}</p>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"space-y-6\">\n              {faqs.slice(3, 6).map((faq, index) => (\n                <div key={index}>\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">{faq.question}</h4>\n                  <p className=\"text-gray-600\">{faq.answer}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </Card>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4487},"client/src/components/technical-specs.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Cpu, Database, Network, Shield, Zap, BarChart3 } from \"lucide-react\";\n\nexport default function TechnicalSpecs() {\n  const architectureSpecs = [\n    {\n      icon: Database,\n      category: \"Storage Architecture\",\n      specs: [\n        \"Hot-Warm-Cold data tiers with automatic lifecycle management\",\n        \"Searchable snapshots for cost-effective long-term retention\",\n        \"Index lifecycle policies with automatic rollover\",\n        \"Cross-cluster replication for disaster recovery\"\n      ]\n    },\n    {\n      icon: Cpu,\n      category: \"Performance & Scaling\",\n      specs: [\n        \"Auto-scaling: 1 node to 100+ node clusters\",\n        \"Sub-second query response times (<200ms p95)\",\n        \"Ingest rates up to 1M documents/second\",\n        \"Horizontal scaling with zero downtime\"\n      ]\n    },\n    {\n      icon: Network,\n      category: \"Network & Connectivity\",\n      specs: [\n        \"AWS PrivateLink, Azure Private Endpoint, GCP Private Connect\",\n        \"VPC peering and dedicated tenancy options\",\n        \"IP filtering and traffic filters\",\n        \"Load balancing with health checks\"\n      ]\n    },\n    {\n      icon: Shield,\n      category: \"Security & Compliance\",\n      specs: [\n        \"TLS 1.3 encryption in transit and at rest\",\n        \"SAML 2.0, LDAP, and OpenID Connect integration\",\n        \"Role-based access control (RBAC) with field-level security\",\n        \"SOC 2 Type II, ISO 27001, GDPR, HIPAA compliance\"\n      ]\n    }\n  ];\n\n  const deploymentTemplates = [\n    {\n      name: \"I/O Optimized\",\n      use_case: \"Search & Analytics\",\n      specs: \"High IOPS, SSD storage, optimized for query performance\",\n      memory_storage: \"8:1 ratio\"\n    },\n    {\n      name: \"Storage Optimized\",\n      use_case: \"Log Analytics\",\n      specs: \"Large disk capacity, cost-effective for retention\",\n      memory_storage: \"4:1 ratio\"\n    },\n    {\n      name: \"CPU Optimized\",\n      use_case: \"Machine Learning\",\n      specs: \"High-performance processors for ML workloads\",\n      memory_storage: \"12:1 ratio\"\n    },\n    {\n      name: \"Memory Optimized\",\n      use_case: \"Real-time Analytics\",\n      specs: \"Large RAM for in-memory operations and caching\",\n      memory_storage: \"16:1 ratio\"\n    }\n  ];\n\n  return (\n    <section id=\"technical-specs\" className=\"py-20 bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl sm:text-4xl font-bold text-gray-900 mb-4\">\n            Enterprise-grade \n            <span className=\"gradient-text\"> technical architecture</span>\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            Built on proven infrastructure patterns with performance, security, and scalability \n            optimized for mission-critical workloads.\n          </p>\n        </div>\n\n        {/* Architecture Specifications */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-16\">\n          {architectureSpecs.map((category, index) => (\n            <Card key={index} className=\"bg-white shadow-sm\">\n              <CardHeader className=\"pb-4\">\n                <CardTitle className=\"flex items-center text-lg\">\n                  <div className=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center mr-4\">\n                    <category.icon className=\"h-5 w-5 text-primary-600\" />\n                  </div>\n                  {category.category}\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-3\">\n                  {category.specs.map((spec, specIndex) => (\n                    <li key={specIndex} className=\"flex items-start\">\n                      <div className=\"w-2 h-2 bg-primary-500 rounded-full mt-2 mr-3 flex-shrink-0\"></div>\n                      <span className=\"text-gray-600\">{spec}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Deployment Templates */}\n        <div className=\"bg-white rounded-2xl p-8 shadow-sm\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\n            Optimized Deployment Templates\n          </h3>\n          <p className=\"text-gray-600 text-center mb-8\">\n            Pre-configured hardware profiles optimized for specific use cases and workload patterns.\n          </p>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {deploymentTemplates.map((template, index) => (\n              <Card key={index} className=\"border-2 border-gray-100 hover:border-primary-300 transition-colors\">\n                <CardContent className=\"p-6\">\n                  <div className=\"text-center mb-4\">\n                    <Badge variant=\"outline\" className=\"mb-2\">{template.name}</Badge>\n                    <h4 className=\"font-semibold text-gray-900\">{template.use_case}</h4>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-4\">{template.specs}</p>\n                  <div className=\"bg-primary-50 rounded-lg p-3 text-center\">\n                    <span className=\"text-sm font-medium text-primary-700\">\n                      Memory:Storage {template.memory_storage}\n                    </span>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n\n        {/* Performance Metrics */}\n        <div className=\"mt-16 grid grid-cols-1 md:grid-cols-3 gap-8\">\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Zap className=\"h-8 w-8 text-green-600\" />\n            </div>\n            <h4 className=\"text-2xl font-bold text-gray-900 mb-2\">99.99%</h4>\n            <p className=\"text-gray-600\">SLA-backed uptime with auto-failover</p>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <BarChart3 className=\"h-8 w-8 text-blue-600\" />\n            </div>\n            <h4 className=\"text-2xl font-bold text-gray-900 mb-2\">&lt;200ms</h4>\n            <p className=\"text-gray-600\">P95 query response time at scale</p>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Database className=\"h-8 w-8 text-purple-600\" />\n            </div>\n            <h4 className=\"text-2xl font-bold text-gray-900 mb-2\">1M+</h4>\n            <p className=\"text-gray-600\">Documents per second ingest rate</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":6950},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/elasticsearch.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Search, \n  Database, \n  Zap, \n  Shield, \n  BarChart3, \n  Clock,\n  CheckCircle,\n  ArrowRight,\n  Cpu,\n  Network,\n  Globe\n} from \"lucide-react\";\n\nexport default function ElasticsearchPage() {\n  const deploymentOptions = [\n    {\n      title: \"Elastic Cloud on AWS\",\n      description: \"Deploy on Amazon Web Services with full integration\",\n      features: [\"VPC peering\", \"AWS PrivateLink\", \"IAM integration\", \"CloudWatch monitoring\"],\n      regions: \"25+ regions available\"\n    },\n    {\n      title: \"Elastic Cloud on Azure\",\n      description: \"Native Azure integration with enterprise security\",\n      features: [\"Private endpoints\", \"Azure AD integration\", \"Azure Monitor\", \"Resource groups\"],\n      regions: \"20+ regions available\"\n    },\n    {\n      title: \"Elastic Cloud on GCP\",\n      description: \"Google Cloud Platform with advanced networking\",\n      features: [\"Private Connect\", \"Cloud IAM\", \"Cloud Logging\", \"VPC-native networking\"],\n      regions: \"15+ regions available\"\n    },\n    {\n      title: \"RevaLogix Private Cloud\",\n      description: \"Dedicated infrastructure with maximum control\",\n      features: [\"Dedicated hardware\", \"Custom networking\", \"Enhanced security\", \"Priority support\"],\n      regions: \"Global deployment\"\n    }\n  ];\n\n  const useCases = [\n    {\n      icon: Search,\n      title: \"Search Applications\",\n      description: \"Build powerful search experiences with relevance tuning\",\n      examples: [\"E-commerce product search\", \"Content management\", \"Site search\", \"Document retrieval\"]\n    },\n    {\n      icon: BarChart3,\n      title: \"Observability & Analytics\",\n      description: \"Monitor infrastructure and analyze application performance\",\n      examples: [\"Log analytics\", \"APM monitoring\", \"Infrastructure metrics\", \"Business intelligence\"]\n    },\n    {\n      icon: Shield,\n      title: \"Security Analytics\",\n      description: \"Detect threats and analyze security events in real-time\",\n      examples: [\"SIEM solutions\", \"Threat hunting\", \"Compliance monitoring\", \"Incident response\"]\n    },\n    {\n      icon: Database,\n      title: \"Data Platform\",\n      description: \"Centralized data storage and analysis for modern applications\",\n      examples: [\"Data lake analytics\", \"Real-time dashboards\", \"Time series analysis\", \"Geospatial data\"]\n    }\n  ];\n\n  const technicalFeatures = [\n    {\n      category: \"Search & Analytics\",\n      features: [\n        \"Full-text search with BM25 scoring\",\n        \"Vector search for machine learning\",\n        \"Aggregations and analytics\",\n        \"Geospatial queries and mapping\",\n        \"Graph analytics and exploration\"\n      ]\n    },\n    {\n      category: \"Machine Learning\",\n      features: [\n        \"Anomaly detection for time series\",\n        \"Data frame analytics\",\n        \"Natural language processing\",\n        \"Classification and regression\",\n        \"Outlier detection\"\n      ]\n    },\n    {\n      category: \"Security\",\n      features: [\n        \"Role-based access control (RBAC)\",\n        \"Field and document level security\",\n        \"SAML and LDAP integration\",\n        \"API key management\",\n        \"Audit logging and compliance\"\n      ]\n    },\n    {\n      category: \"Operations\",\n      features: [\n        \"Index lifecycle management\",\n        \"Cross-cluster replication\",\n        \"Snapshot and restore\",\n        \"Alerting and notifications\",\n        \"Performance monitoring\"\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-primary-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              Enterprise \n              <span className=\"gradient-text\"> Elasticsearch</span>\n              <br />Platform\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Deploy production-ready Elasticsearch clusters with advanced security, machine learning, \n              and observability features. Built for enterprise scale with 99.99% uptime SLA.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start Free Trial\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                View Documentation\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Deployment Options */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Deploy Anywhere\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Choose your preferred cloud provider or deploy on our private infrastructure\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {deploymentOptions.map((option, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <CardTitle className=\"text-lg\">{option.title}</CardTitle>\n                  <p className=\"text-sm text-gray-600\">{option.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2 mb-4\">\n                    {option.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    <Globe className=\"h-3 w-3 mr-1\" />\n                    {option.regions}\n                  </Badge>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Built for Every Use Case\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              From search applications to security analytics, Elasticsearch powers diverse workloads\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {useCases.map((useCase, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start mb-4\">\n                    <div className=\"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center mr-4\">\n                      <useCase.icon className=\"h-6 w-6 text-primary-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{useCase.title}</h3>\n                      <p className=\"text-gray-600 mb-4\">{useCase.description}</p>\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {useCase.examples.map((example, exampleIndex) => (\n                      <div key={exampleIndex} className=\"text-sm text-gray-600 bg-gray-50 rounded px-3 py-2\">\n                        {example}\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Technical Features */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Advanced Technical Capabilities\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Enterprise-grade features for search, analytics, security, and operations\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {technicalFeatures.map((category, index) => (\n              <div key={index}>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{category.category}</h3>\n                <ul className=\"space-y-3\">\n                  {category.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-start\">\n                      <div className=\"w-2 h-2 bg-primary-500 rounded-full mt-2 mr-3 flex-shrink-0\"></div>\n                      <span className=\"text-sm text-gray-600\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Performance Specs */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Performance at Scale\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Industry-leading performance metrics for enterprise workloads\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Zap className=\"h-8 w-8 text-primary-600\" />\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900 mb-2\">1M+</div>\n              <div className=\"text-gray-600\">Documents/second ingestion</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Clock className=\"h-8 w-8 text-green-600\" />\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900 mb-2\">&lt;50ms</div>\n              <div className=\"text-gray-600\">Average query latency</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Database className=\"h-8 w-8 text-blue-600\" />\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900 mb-2\">100TB+</div>\n              <div className=\"text-gray-600\">Maximum cluster size</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Network className=\"h-8 w-8 text-purple-600\" />\n              </div>\n              <div className=\"text-3xl font-bold text-gray-900 mb-2\">99.99%</div>\n              <div className=\"text-gray-600\">Uptime SLA guarantee</div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Ready to Deploy Elasticsearch?\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Start with a free trial or speak with our solution architects about your specific requirements.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Start Free Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Contact Sales\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":12842},"client/src/pages/home.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport HeroSection from \"@/components/hero-section\";\nimport FeaturesSection from \"@/components/features-section\";\nimport TechnicalSpecs from \"@/components/technical-specs\";\nimport MigrationIntegration from \"@/components/migration-integration\";\nimport PricingSection from \"@/components/pricing-section\";\nimport DashboardPreview from \"@/components/dashboard-preview\";\nimport ProfessionalServices from \"@/components/professional-services\";\nimport SupportSection from \"@/components/support-section\";\nimport CTASection from \"@/components/cta-section\";\nimport Footer from \"@/components/footer\";\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      <HeroSection />\n      <FeaturesSection />\n      <TechnicalSpecs />\n      <MigrationIntegration />\n      <PricingSection />\n      <DashboardPreview />\n      <ProfessionalServices />\n      <SupportSection />\n      <CTASection />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":1017},"client/src/pages/kibana.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  BarChart3, \n  PieChart, \n  TrendingUp, \n  Search, \n  Shield, \n  Bell,\n  Eye,\n  Map,\n  Brain,\n  ArrowRight,\n  CheckCircle,\n  Layers,\n  Filter\n} from \"lucide-react\";\n\nexport default function KibanaPage() {\n  const dashboardTypes = [\n    {\n      icon: BarChart3,\n      title: \"Analytics Dashboards\",\n      description: \"Interactive visualizations for business intelligence and data exploration\",\n      features: [\n        \"Real-time data visualization\",\n        \"Custom metric calculations\",\n        \"Drill-down capabilities\",\n        \"Export and sharing options\"\n      ]\n    },\n    {\n      icon: Shield,\n      title: \"Security Dashboards\",\n      description: \"Monitor security events and threat intelligence in real-time\",\n      features: [\n        \"SIEM event correlation\",\n        \"Threat hunting workflows\",\n        \"Compliance reporting\",\n        \"Incident response tracking\"\n      ]\n    },\n    {\n      icon: Eye,\n      title: \"Observability Dashboards\",\n      description: \"Monitor infrastructure, applications, and user experience\",\n      features: [\n        \"APM service maps\",\n        \"Infrastructure monitoring\",\n        \"Log correlation\",\n        \"SLA tracking\"\n      ]\n    },\n    {\n      icon: TrendingUp,\n      title: \"Business Dashboards\",\n      description: \"Track KPIs and business metrics with executive-level views\",\n      features: [\n        \"KPI monitoring\",\n        \"Revenue analytics\",\n        \"Customer insights\",\n        \"Performance metrics\"\n      ]\n    }\n  ];\n\n  const visualizationTypes = [\n    { name: \"Line Charts\", icon: TrendingUp, description: \"Time series and trend analysis\" },\n    { name: \"Bar Charts\", icon: BarChart3, description: \"Comparative data visualization\" },\n    { name: \"Pie Charts\", icon: PieChart, description: \"Proportional data representation\" },\n    { name: \"Heat Maps\", icon: Map, description: \"Geographic and correlation data\" },\n    { name: \"Data Tables\", icon: Layers, description: \"Detailed tabular views\" },\n    { name: \"Gauges\", icon: Filter, description: \"Real-time metric indicators\" }\n  ];\n\n  const mlFeatures = [\n    {\n      title: \"Anomaly Detection\",\n      description: \"Automatically detect unusual patterns in your data\",\n      capabilities: [\n        \"Time series anomaly detection\",\n        \"Population analysis\",\n        \"Categorization analysis\",\n        \"Custom job configuration\"\n      ]\n    },\n    {\n      title: \"Forecasting\",\n      description: \"Predict future trends based on historical data\",\n      capabilities: [\n        \"Single and multi-metric forecasting\",\n        \"Confidence intervals\",\n        \"Seasonal pattern recognition\",\n        \"Alert on forecast deviations\"\n      ]\n    },\n    {\n      title: \"Data Frame Analytics\",\n      description: \"Advanced analytics using machine learning techniques\",\n      capabilities: [\n        \"Classification algorithms\",\n        \"Regression analysis\",\n        \"Outlier detection\",\n        \"Feature importance analysis\"\n      ]\n    }\n  ];\n\n  const alertingCapabilities = [\n    {\n      icon: Bell,\n      title: \"Smart Alerting\",\n      description: \"Intelligent threshold and anomaly-based alerts\",\n      features: [\n        \"Threshold-based alerts\",\n        \"Anomaly detection alerts\",\n        \"Composite conditions\",\n        \"Alert suppression\"\n      ]\n    },\n    {\n      icon: Brain,\n      title: \"Machine Learning Alerts\",\n      description: \"ML-powered alerting for complex patterns\",\n      features: [\n        \"Pattern recognition\",\n        \"Behavioral analysis\",\n        \"Predictive alerting\",\n        \"Custom ML jobs\"\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-blue-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              <span className=\"gradient-text\">Kibana</span> Analytics\n              <br />& Visualization\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Transform your data into actionable insights with interactive dashboards, \n              machine learning analytics, and real-time monitoring capabilities.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Explore Kibana\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                View Demo\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Dashboard Types */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Purpose-Built Dashboards\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Pre-configured dashboards for specific use cases and industries\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {dashboardTypes.map((dashboard, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center mr-4\">\n                      <dashboard.icon className=\"h-5 w-5 text-primary-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{dashboard.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{dashboard.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {dashboard.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Visualization Types */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Rich Visualization Library\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Choose from dozens of visualization types to tell your data story\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {visualizationTypes.map((viz, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200 text-center\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <viz.icon className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{viz.name}</h3>\n                  <p className=\"text-sm text-gray-600\">{viz.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Machine Learning Features */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Machine Learning Analytics\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Built-in ML capabilities for advanced analytics and insights\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {mlFeatures.map((feature, index) => (\n              <Card key={index} className=\"border border-gray-200\">\n                <CardHeader>\n                  <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\n                  <p className=\"text-gray-600\">{feature.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {feature.capabilities.map((capability, capIndex) => (\n                      <li key={capIndex} className=\"flex items-start\">\n                        <div className=\"w-2 h-2 bg-primary-500 rounded-full mt-2 mr-3 flex-shrink-0\"></div>\n                        <span className=\"text-sm text-gray-600\">{capability}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Alerting & Monitoring */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Intelligent Alerting\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Stay informed with smart alerts and proactive monitoring\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {alertingCapabilities.map((capability, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-start mb-4\">\n                    <div className=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center mr-4\">\n                      <capability.icon className=\"h-6 w-6 text-orange-600\" />\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{capability.title}</h3>\n                      <p className=\"text-gray-600 mb-4\">{capability.description}</p>\n                    </div>\n                  </div>\n                  <ul className=\"space-y-2\">\n                    {capability.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Dashboard Preview */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Interactive Dashboard Experience\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Explore data with drag-and-drop dashboard building and real-time collaboration\n            </p>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\n            <div className=\"bg-white rounded-lg p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Operations Dashboard</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"text-green-600\">Live</Badge>\n                  <Button size=\"sm\" variant=\"outline\">\n                    <Search className=\"h-4 w-4 mr-2\" />\n                    Filter\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                <div className=\"bg-gradient-to-r from-green-400 to-green-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">2.4M</div>\n                  <div className=\"text-green-100 text-sm\">Total Events</div>\n                  <div className=\"text-xs text-green-200\">↑ 12% from yesterday</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-blue-400 to-blue-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">98.7%</div>\n                  <div className=\"text-blue-100 text-sm\">System Health</div>\n                  <div className=\"text-xs text-blue-200\">All systems operational</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-purple-400 to-purple-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">156ms</div>\n                  <div className=\"text-purple-100 text-sm\">Response Time</div>\n                  <div className=\"text-xs text-purple-200\">P95: 245ms</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Traffic Patterns</h4>\n                  <div className=\"h-32 bg-white rounded border flex items-center justify-center\">\n                    <BarChart3 className=\"h-12 w-12 text-gray-400\" />\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Geographic Distribution</h4>\n                  <div className=\"h-32 bg-white rounded border flex items-center justify-center\">\n                    <Map className=\"h-12 w-12 text-gray-400\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Start Building Dashboards Today\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Create powerful visualizations and gain insights from your data in minutes.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Try Kibana Free\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Watch Demo\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":15463},"client/src/pages/machine-learning.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Brain, \n  TrendingUp, \n  Search, \n  AlertTriangle, \n  Eye, \n  BarChart3,\n  CheckCircle,\n  ArrowRight,\n  Zap,\n  Clock,\n  Target,\n  Activity\n} from \"lucide-react\";\n\nexport default function MachineLearningPage() {\n  const mlCapabilities = [\n    {\n      icon: TrendingUp,\n      title: \"Anomaly Detection\",\n      description: \"Detect unusual patterns in time series, populations, and categories\",\n      features: [\n        \"Real-time anomaly detection\",\n        \"Historical analysis\",\n        \"Population-based detection\",\n        \"Custom sensitivity settings\",\n        \"Multi-metric correlation\"\n      ]\n    },\n    {\n      icon: Target,\n      title: \"Forecasting\",\n      description: \"Predict future trends and values based on historical data\",\n      features: [\n        \"Single and multi-metric forecasting\",\n        \"Confidence intervals and bounds\",\n        \"Seasonal pattern recognition\",\n        \"Long-term trend analysis\",\n        \"Forecast accuracy scoring\"\n      ]\n    },\n    {\n      icon: Search,\n      title: \"Data Frame Analytics\",\n      description: \"Advanced analytics using supervised and unsupervised learning\",\n      features: [\n        \"Classification and regression\",\n        \"Outlier detection\",\n        \"Feature importance analysis\",\n        \"Custom training datasets\",\n        \"Model performance metrics\"\n      ]\n    },\n    {\n      icon: Brain,\n      title: \"Natural Language Processing\",\n      description: \"Extract insights from text using machine learning\",\n      features: [\n        \"Named entity recognition\",\n        \"Sentiment analysis\",\n        \"Language detection\",\n        \"Text classification\",\n        \"Custom model training\"\n      ]\n    }\n  ];\n\n  const useCases = [\n    {\n      title: \"IT Operations\",\n      description: \"Monitor system health and predict failures\",\n      examples: [\n        \"Server performance anomalies\",\n        \"Network traffic predictions\",\n        \"Capacity planning\",\n        \"Incident prevention\"\n      ]\n    },\n    {\n      title: \"Security Analytics\",\n      description: \"Detect threats and analyze security events\",\n      examples: [\n        \"User behavior analytics\",\n        \"Threat hunting\",\n        \"Malware detection\",\n        \"Fraud prevention\"\n      ]\n    },\n    {\n      title: \"Business Intelligence\",\n      description: \"Gain insights from business data patterns\",\n      examples: [\n        \"Sales forecasting\",\n        \"Customer behavior analysis\",\n        \"Market trend prediction\",\n        \"Revenue optimization\"\n      ]\n    },\n    {\n      title: \"IoT & Sensor Data\",\n      description: \"Analyze real-time sensor and device data\",\n      examples: [\n        \"Predictive maintenance\",\n        \"Environmental monitoring\",\n        \"Quality control\",\n        \"Energy optimization\"\n      ]\n    }\n  ];\n\n  const mlWorkflow = [\n    {\n      step: 1,\n      title: \"Data Preparation\",\n      description: \"Ingest and prepare your data for analysis\",\n      details: [\n        \"Automated data cleaning\",\n        \"Feature engineering\",\n        \"Data validation\",\n        \"Schema detection\"\n      ]\n    },\n    {\n      step: 2,\n      title: \"Model Training\",\n      description: \"Train machine learning models on your dataset\",\n      details: [\n        \"Algorithm selection\",\n        \"Hyperparameter tuning\",\n        \"Cross-validation\",\n        \"Performance evaluation\"\n      ]\n    },\n    {\n      step: 3,\n      title: \"Deployment\",\n      description: \"Deploy models for real-time inference\",\n      details: [\n        \"Model deployment\",\n        \"A/B testing\",\n        \"Performance monitoring\",\n        \"Automatic retraining\"\n      ]\n    },\n    {\n      step: 4,\n      title: \"Monitoring\",\n      description: \"Monitor model performance and accuracy\",\n      details: [\n        \"Drift detection\",\n        \"Accuracy tracking\",\n        \"Alert configuration\",\n        \"Model updates\"\n      ]\n    }\n  ];\n\n  const performanceMetrics = [\n    {\n      icon: Zap,\n      title: \"Training Speed\",\n      value: \"10x\",\n      description: \"Faster than traditional ML platforms\"\n    },\n    {\n      icon: Clock,\n      title: \"Real-time Inference\",\n      value: \"<100ms\",\n      description: \"Average prediction latency\"\n    },\n    {\n      icon: Activity,\n      title: \"Model Accuracy\",\n      value: \"95%+\",\n      description: \"Average accuracy across use cases\"\n    },\n    {\n      icon: BarChart3,\n      title: \"Data Processing\",\n      value: \"TB/hour\",\n      description: \"Training data throughput\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-purple-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              <span className=\"gradient-text\">Machine Learning</span>\n              <br />Built for Scale\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Unlock the power of your data with built-in machine learning capabilities. \n              Detect anomalies, forecast trends, and gain insights without the complexity.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start ML Trial\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                View Examples\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* ML Capabilities */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Advanced ML Capabilities\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Pre-built machine learning models ready to deploy on your data\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {mlCapabilities.map((capability, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center mr-4\">\n                      <capability.icon className=\"h-5 w-5 text-purple-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{capability.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{capability.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {capability.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              ML Use Cases Across Industries\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Real-world applications powered by machine learning analytics\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {useCases.map((useCase, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">{useCase.title}</h3>\n                  <p className=\"text-gray-600 mb-4\">{useCase.description}</p>\n                  <ul className=\"space-y-2\">\n                    {useCase.examples.map((example, exampleIndex) => (\n                      <li key={exampleIndex} className=\"text-sm text-gray-600 flex items-start\">\n                        <div className=\"w-1.5 h-1.5 bg-primary-500 rounded-full mt-2 mr-2 flex-shrink-0\"></div>\n                        {example}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* ML Workflow */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              End-to-End ML Workflow\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              From data preparation to production deployment in a unified platform\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {mlWorkflow.map((phase, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-primary-500 rounded-full flex items-center justify-center mx-auto mb-4 text-white text-xl font-bold\">\n                  {phase.step}\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{phase.title}</h3>\n                <p className=\"text-gray-600 mb-4\">{phase.description}</p>\n                <ul className=\"space-y-1 text-sm text-gray-600\">\n                  {phase.details.map((detail, detailIndex) => (\n                    <li key={detailIndex}>{detail}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Performance Metrics */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Performance at Scale\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Enterprise-grade performance for mission-critical ML workloads\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {performanceMetrics.map((metric, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <metric.icon className=\"h-8 w-8 text-purple-600\" />\n                </div>\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">{metric.value}</div>\n                <div className=\"text-lg font-medium text-gray-900 mb-1\">{metric.title}</div>\n                <div className=\"text-sm text-gray-600\">{metric.description}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* ML Dashboard Preview */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              ML Analytics Dashboard\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Monitor model performance and insights in real-time\n            </p>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\n            <div className=\"bg-white rounded-lg p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">ML Analytics Overview</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"text-green-600\">Live</Badge>\n                  <Button size=\"sm\" variant=\"outline\">\n                    <Brain className=\"h-4 w-4 mr-2\" />\n                    Models\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-gradient-to-r from-green-400 to-green-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">47</div>\n                  <div className=\"text-green-100 text-sm\">Active Models</div>\n                  <div className=\"text-xs text-green-200\">12 anomaly detection</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-blue-400 to-blue-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">2.4K</div>\n                  <div className=\"text-blue-100 text-sm\">Anomalies Detected</div>\n                  <div className=\"text-xs text-blue-200\">Last 24 hours</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-purple-400 to-purple-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">94.7%</div>\n                  <div className=\"text-purple-100 text-sm\">Model Accuracy</div>\n                  <div className=\"text-xs text-purple-200\">Average across jobs</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-orange-400 to-orange-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">18TB</div>\n                  <div className=\"text-orange-100 text-sm\">Data Processed</div>\n                  <div className=\"text-xs text-orange-200\">This month</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Model Performance</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Server anomaly detection</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-green-500 h-2 rounded-full\" style={{width: '96%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">96%</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Sales forecasting</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-blue-500 h-2 rounded-full\" style={{width: '91%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">91%</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">User behavior analysis</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-purple-500 h-2 rounded-full\" style={{width: '87%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">87%</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Recent Alerts</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <AlertTriangle className=\"w-4 h-4 text-yellow-500 mr-2\" />\n                        <span>CPU usage spike detected</span>\n                      </div>\n                      <span className=\"text-gray-500\">5 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <Eye className=\"w-4 h-4 text-blue-500 mr-2\" />\n                        <span>Forecast model updated</span>\n                      </div>\n                      <span className=\"text-gray-500\">12 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                        <span>Training job completed</span>\n                      </div>\n                      <span className=\"text-gray-500\">28 min ago</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Start Your ML Journey Today\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Deploy machine learning models and start gaining insights from your data immediately.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Try ML Features\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Schedule Demo\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":18817},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/pricing.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Check, \n  X, \n  ArrowRight,\n  Shield,\n  Clock,\n  Users,\n  Database,\n  Cpu,\n  Network,\n  Zap\n} from \"lucide-react\";\n\nexport default function PricingPage() {\n  const pricingTiers = [\n    {\n      name: \"Developer\",\n      description: \"Perfect for development and testing\",\n      price: \"Free\",\n      period: \"\",\n      popular: false,\n      features: {\n        \"Cluster Configuration\": {\n          \"Max Clusters\": \"1\",\n          \"Max Nodes per Cluster\": \"3\",\n          \"RAM per Node\": \"8GB\",\n          \"vCPU per Node\": \"2\",\n          \"Storage per Node\": \"32GB SSD\"\n        },\n        \"Features & Capabilities\": {\n          \"Elasticsearch & Kibana\": true,\n          \"Basic Monitoring\": true,\n          \"REST API Access\": true,\n          \"Machine Learning\": false,\n          \"Advanced Security\": false,\n          \"Cross-cluster Replication\": false\n        },\n        \"Support & SLA\": {\n          \"Support Type\": \"Community\",\n          \"Response Time\": \"Best effort\",\n          \"Uptime SLA\": \"99%\",\n          \"Expert Assistance\": false\n        }\n      },\n      cta: \"Start Free\"\n    },\n    {\n      name: \"Production\",\n      description: \"For production workloads and teams\",\n      price: \"$299\",\n      period: \"/month\",\n      popular: true,\n      features: {\n        \"Cluster Configuration\": {\n          \"Max Clusters\": \"10\",\n          \"Max Nodes per Cluster\": \"100\",\n          \"RAM per Node\": \"32GB\",\n          \"vCPU per Node\": \"8\",\n          \"Storage per Node\": \"500GB SSD\"\n        },\n        \"Features & Capabilities\": {\n          \"Elasticsearch & Kibana\": true,\n          \"Advanced Monitoring\": true,\n          \"REST API Access\": true,\n          \"Machine Learning\": true,\n          \"Advanced Security\": true,\n          \"Cross-cluster Replication\": true\n        },\n        \"Support & SLA\": {\n          \"Support Type\": \"24/7 Priority\",\n          \"Response Time\": \"< 4 hours\",\n          \"Uptime SLA\": \"99.9%\",\n          \"Expert Assistance\": true\n        }\n      },\n      cta: \"Start 14-Day Trial\"\n    },\n    {\n      name: \"Enterprise\",\n      description: \"Mission-critical applications at scale\",\n      price: \"Custom\",\n      period: \" pricing\",\n      popular: false,\n      features: {\n        \"Cluster Configuration\": {\n          \"Max Clusters\": \"Unlimited\",\n          \"Max Nodes per Cluster\": \"1000+\",\n          \"RAM per Node\": \"Custom\",\n          \"vCPU per Node\": \"Custom\",\n          \"Storage per Node\": \"Custom\"\n        },\n        \"Features & Capabilities\": {\n          \"Elasticsearch & Kibana\": true,\n          \"Advanced Monitoring\": true,\n          \"REST API Access\": true,\n          \"Machine Learning\": true,\n          \"Advanced Security\": true,\n          \"Cross-cluster Replication\": true\n        },\n        \"Support & SLA\": {\n          \"Support Type\": \"Dedicated Team\",\n          \"Response Time\": \"< 1 hour\",\n          \"Uptime SLA\": \"99.99%\",\n          \"Expert Assistance\": true\n        }\n      },\n      cta: \"Contact Sales\"\n    }\n  ];\n\n  const additionalServices = [\n    {\n      icon: Users,\n      title: \"Professional Services\",\n      description: \"Expert consulting and implementation\",\n      pricing: \"Starting at $5,000\"\n    },\n    {\n      icon: Shield,\n      title: \"Advanced Security\",\n      description: \"Enhanced security features and compliance\",\n      pricing: \"From $500/month\"\n    },\n    {\n      icon: Database,\n      title: \"Data Migration\",\n      description: \"Migrate from existing platforms\",\n      pricing: \"Custom quote\"\n    },\n    {\n      icon: Clock,\n      title: \"Premium Support\",\n      description: \"Dedicated support engineer\",\n      pricing: \"From $2,000/month\"\n    }\n  ];\n\n  const deploymentPricing = [\n    {\n      provider: \"AWS\",\n      regions: \"25+ regions\",\n      basePrice: \"$0.08/hour\",\n      features: [\"VPC peering\", \"PrivateLink\", \"IAM integration\"]\n    },\n    {\n      provider: \"Azure\",\n      regions: \"20+ regions\", \n      basePrice: \"$0.09/hour\",\n      features: [\"Private endpoints\", \"Azure AD\", \"Resource groups\"]\n    },\n    {\n      provider: \"Google Cloud\",\n      regions: \"15+ regions\",\n      basePrice: \"$0.10/hour\", \n      features: [\"Private Connect\", \"Cloud IAM\", \"VPC native\"]\n    },\n    {\n      provider: \"RevaLogix Private\",\n      regions: \"Global\",\n      basePrice: \"Custom\",\n      features: [\"Dedicated hardware\", \"Custom networking\", \"Enhanced SLA\"]\n    }\n  ];\n\n  const renderFeatureValue = (value: any) => {\n    if (typeof value === 'boolean') {\n      return value ? (\n        <Check className=\"h-4 w-4 text-green-500\" />\n      ) : (\n        <X className=\"h-4 w-4 text-gray-400\" />\n      );\n    }\n    return <span className=\"text-sm text-gray-900\">{value}</span>;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-primary-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              Transparent\n              <span className=\"gradient-text\"> Pricing</span>\n              <br />Built for Scale\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Start free and scale as you grow. No hidden fees, no vendor lock-in. \n              Enterprise-grade features at every tier.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Main Pricing Tiers */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {pricingTiers.map((tier, index) => (\n              <Card key={index} className={`relative ${tier.popular ? 'border-2 border-primary-500 shadow-xl' : 'border border-gray-200 shadow-sm'}`}>\n                {tier.popular && (\n                  <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                    <Badge className=\"bg-primary-500 text-white px-6 py-1\">\n                      Most Popular\n                    </Badge>\n                  </div>\n                )}\n                \n                <CardHeader className=\"text-center pb-6\">\n                  <CardTitle className=\"text-2xl\">{tier.name}</CardTitle>\n                  <p className=\"text-gray-600 mb-4\">{tier.description}</p>\n                  <div className=\"mb-6\">\n                    <span className=\"text-4xl font-bold text-gray-900\">{tier.price}</span>\n                    <span className=\"text-gray-600\">{tier.period}</span>\n                  </div>\n                  <Button \n                    className={`w-full ${tier.popular ? 'bg-primary-500 text-white hover:bg-primary-600' : 'border border-primary-500 text-primary-600 hover:bg-primary-50'}`}\n                    variant={tier.popular ? \"default\" : \"outline\"}\n                  >\n                    {tier.cta}\n                    <ArrowRight className=\"ml-2 h-4 w-4\" />\n                  </Button>\n                </CardHeader>\n\n                <CardContent className=\"pt-0\">\n                  {Object.entries(tier.features).map(([category, features]) => (\n                    <div key={category} className=\"mb-6\">\n                      <h4 className=\"font-medium text-gray-900 mb-3 border-b border-gray-200 pb-2\">\n                        {category}\n                      </h4>\n                      <div className=\"space-y-3\">\n                        {Object.entries(features).map(([feature, value]) => (\n                          <div key={feature} className=\"flex items-center justify-between\">\n                            <span className=\"text-sm text-gray-600\">{feature}</span>\n                            {renderFeatureValue(value)}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Deployment Pricing */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Cloud Provider Pricing\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Deploy on your preferred cloud with transparent, per-hour pricing\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {deploymentPricing.map((provider, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6 text-center\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{provider.provider}</h3>\n                  <div className=\"text-2xl font-bold text-primary-600 mb-2\">{provider.basePrice}</div>\n                  <div className=\"text-sm text-gray-600 mb-4\">per node/hour</div>\n                  <Badge variant=\"outline\" className=\"mb-4\">{provider.regions}</Badge>\n                  <ul className=\"space-y-2 text-sm text-gray-600\">\n                    {provider.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center\">\n                        <Check className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Additional Services */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Additional Services\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Expert services to accelerate your implementation and success\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {additionalServices.map((service, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-12 h-12 bg-primary-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <service.icon className=\"h-6 w-6 text-primary-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{service.title}</h3>\n                  <p className=\"text-sm text-gray-600 mb-4\">{service.description}</p>\n                  <div className=\"text-lg font-bold text-primary-600\">{service.pricing}</div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Pricing Calculator */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Calculate Your Costs\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Estimate your monthly costs based on your specific requirements\n            </p>\n          </div>\n\n          <Card className=\"bg-white border border-gray-200\">\n            <CardContent className=\"p-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mb-8\">\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Cpu className=\"h-8 w-8 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Compute</h3>\n                  <p className=\"text-sm text-gray-600\">CPU and memory resources</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Database className=\"h-8 w-8 text-green-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Storage</h3>\n                  <p className=\"text-sm text-gray-600\">SSD storage and snapshots</p>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Network className=\"h-8 w-8 text-purple-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Network</h3>\n                  <p className=\"text-sm text-gray-600\">Data transfer and bandwidth</p>\n                </div>\n              </div>\n\n              <div className=\"text-center\">\n                <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                  Launch Pricing Calculator\n                  <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </section>\n\n      {/* FAQ */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Frequently Asked Questions\n            </h2>\n          </div>\n\n          <div className=\"space-y-6\">\n            <Card className=\"border border-gray-200\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  Is there a free trial available?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Yes, we offer a 14-day free trial for all paid plans. The Developer tier is free forever \n                  with basic features. No credit card required to start.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border border-gray-200\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  Can I change plans anytime?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Absolutely. You can upgrade or downgrade your plan at any time. Changes take effect \n                  at the next billing cycle, and we'll prorate any differences.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"border border-gray-200\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  What's included in Enterprise pricing?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Enterprise pricing includes dedicated infrastructure, custom SLAs, priority support, \n                  professional services, and volume discounts. Contact our sales team for a custom quote.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Ready to Get Started?\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Start with our free tier or speak with our team about your specific requirements.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Start Free Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Contact Sales\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":16654},"client/src/pages/security.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Shield, \n  Lock, \n  Eye, \n  Bell, \n  Search, \n  TrendingUp,\n  CheckCircle,\n  ArrowRight,\n  UserCheck,\n  FileText,\n  AlertTriangle,\n  Activity\n} from \"lucide-react\";\n\nexport default function SecurityPage() {\n  const securityFeatures = [\n    {\n      icon: Lock,\n      title: \"Authentication & Authorization\",\n      description: \"Enterprise-grade user management and access control\",\n      features: [\n        \"SAML 2.0 and LDAP integration\",\n        \"Multi-factor authentication (MFA)\",\n        \"Role-based access control (RBAC)\",\n        \"API key management\",\n        \"OpenID Connect support\"\n      ]\n    },\n    {\n      icon: Shield,\n      title: \"Data Protection\",\n      description: \"Comprehensive encryption and data security\",\n      features: [\n        \"TLS 1.3 encryption in transit\",\n        \"AES-256 encryption at rest\",\n        \"Field-level security\",\n        \"Document-level security\",\n        \"Key management service\"\n      ]\n    },\n    {\n      icon: Eye,\n      title: \"Monitoring & Auditing\",\n      description: \"Complete visibility into security events\",\n      features: [\n        \"Security audit logs\",\n        \"Real-time threat detection\",\n        \"Compliance reporting\",\n        \"Access pattern analysis\",\n        \"Anomaly detection\"\n      ]\n    },\n    {\n      icon: UserCheck,\n      title: \"Identity Management\",\n      description: \"Centralized identity and access management\",\n      features: [\n        \"Single sign-on (SSO)\",\n        \"Identity federation\",\n        \"User lifecycle management\",\n        \"Privileged access management\",\n        \"Session management\"\n      ]\n    }\n  ];\n\n  const siemCapabilities = [\n    {\n      title: \"Threat Detection\",\n      description: \"Advanced analytics to identify security threats\",\n      capabilities: [\n        \"Behavioral analysis\",\n        \"Threat intelligence integration\",\n        \"Machine learning detection\",\n        \"Real-time correlation\"\n      ]\n    },\n    {\n      title: \"Incident Response\",\n      description: \"Streamlined workflows for security incidents\",\n      capabilities: [\n        \"Automated response actions\",\n        \"Case management\",\n        \"Forensic analysis\",\n        \"Timeline reconstruction\"\n      ]\n    },\n    {\n      title: \"Compliance Management\",\n      description: \"Meet regulatory requirements with automated reporting\",\n      capabilities: [\n        \"PCI DSS compliance\",\n        \"GDPR data protection\",\n        \"SOX reporting\",\n        \"HIPAA audit trails\"\n      ]\n    }\n  ];\n\n  const complianceStandards = [\n    { name: \"SOC 2 Type II\", description: \"Security, availability, and confidentiality\" },\n    { name: \"ISO 27001\", description: \"Information security management\" },\n    { name: \"PCI DSS\", description: \"Payment card industry standards\" },\n    { name: \"GDPR\", description: \"General Data Protection Regulation\" },\n    { name: \"HIPAA\", description: \"Healthcare information protection\" },\n    { name: \"FedRAMP\", description: \"Federal risk and authorization management\" }\n  ];\n\n  const securityMetrics = [\n    {\n      icon: Activity,\n      title: \"Threat Detection Rate\",\n      value: \"99.7%\",\n      description: \"Advanced threats detected and blocked\"\n    },\n    {\n      icon: Bell,\n      title: \"Mean Time to Detection\",\n      value: \"< 2 min\",\n      description: \"Average time to identify security events\"\n    },\n    {\n      icon: Shield,\n      title: \"Security Incidents\",\n      value: \"0\",\n      description: \"Successful breaches in last 12 months\"\n    },\n    {\n      icon: CheckCircle,\n      title: \"Compliance Score\",\n      value: \"100%\",\n      description: \"Adherence to security frameworks\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-red-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              Enterprise\n              <span className=\"gradient-text\"> Security</span>\n              <br />& SIEM Platform\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Protect your organization with comprehensive security analytics, threat detection, \n              and compliance management built on battle-tested Elasticsearch technology.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start Security Trial\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                Request Demo\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Security Features */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Comprehensive Security Framework\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Multi-layered security controls to protect your data and infrastructure\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {securityFeatures.map((feature, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center mr-4\">\n                      <feature.icon className=\"h-5 w-5 text-red-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{feature.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {feature.features.map((featureItem, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {featureItem}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* SIEM Capabilities */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Advanced SIEM Capabilities\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Security information and event management with machine learning and automation\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {siemCapabilities.map((capability, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardHeader>\n                  <CardTitle className=\"text-xl\">{capability.title}</CardTitle>\n                  <p className=\"text-gray-600\">{capability.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {capability.capabilities.map((cap, capIndex) => (\n                      <li key={capIndex} className=\"flex items-start\">\n                        <div className=\"w-2 h-2 bg-primary-500 rounded-full mt-2 mr-3 flex-shrink-0\"></div>\n                        <span className=\"text-sm text-gray-600\">{cap}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Security Metrics */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Security Performance Metrics\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Real-world security effectiveness and performance indicators\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {securityMetrics.map((metric, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <metric.icon className=\"h-8 w-8 text-red-600\" />\n                </div>\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">{metric.value}</div>\n                <div className=\"text-lg font-medium text-gray-900 mb-1\">{metric.title}</div>\n                <div className=\"text-sm text-gray-600\">{metric.description}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Compliance Standards */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Compliance & Certifications\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Meet regulatory requirements with built-in compliance frameworks\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {complianceStandards.map((standard, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200 text-center\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <FileText className=\"h-6 w-6 text-green-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{standard.name}</h3>\n                  <p className=\"text-sm text-gray-600\">{standard.description}</p>\n                  <Badge variant=\"outline\" className=\"mt-3 text-green-600 border-green-300\">\n                    Certified\n                  </Badge>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Security Dashboard Preview */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Real-time Security Operations Center\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Centralized security monitoring and incident management\n            </p>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\n            <div className=\"bg-white rounded-lg p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Security Operations Dashboard</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"text-red-600\">High Alert</Badge>\n                  <Button size=\"sm\" variant=\"outline\">\n                    <AlertTriangle className=\"h-4 w-4 mr-2\" />\n                    Incidents\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-gradient-to-r from-green-400 to-green-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">2,847</div>\n                  <div className=\"text-green-100 text-sm\">Events Processed</div>\n                  <div className=\"text-xs text-green-200\">Last hour</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-yellow-400 to-yellow-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">3</div>\n                  <div className=\"text-yellow-100 text-sm\">Active Threats</div>\n                  <div className=\"text-xs text-yellow-200\">Under investigation</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-red-400 to-red-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">1</div>\n                  <div className=\"text-red-100 text-sm\">Critical Alert</div>\n                  <div className=\"text-xs text-red-200\">Requires attention</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-blue-400 to-blue-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">98.7%</div>\n                  <div className=\"text-blue-100 text-sm\">Detection Rate</div>\n                  <div className=\"text-xs text-blue-200\">Last 24 hours</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Threat Timeline</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-2 h-2 bg-red-500 rounded-full mr-2\"></div>\n                        <span>Suspicious login detected</span>\n                      </div>\n                      <span className=\"text-gray-500\">2 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-2 h-2 bg-yellow-500 rounded-full mr-2\"></div>\n                        <span>Unusual network activity</span>\n                      </div>\n                      <span className=\"text-gray-500\">5 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                        <span>Vulnerability scan completed</span>\n                      </div>\n                      <span className=\"text-gray-500\">12 min ago</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Top Risk Indicators</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Failed login attempts</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-red-500 h-2 rounded-full\" style={{width: '80%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">High</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Malware detections</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-yellow-500 h-2 rounded-full\" style={{width: '40%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">Med</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Data exfiltration</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-green-500 h-2 rounded-full\" style={{width: '10%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">Low</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Secure Your Organization Today\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Deploy enterprise security analytics and start protecting your data in minutes.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Start Security Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Contact Security Expert\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":18209},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/solutions/enterprise.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Building, \n  Search, \n  Users, \n  FileText, \n  Shield,\n  CheckCircle,\n  ArrowRight,\n  Globe,\n  Database,\n  Zap,\n  Clock,\n  BarChart3,\n  Lock\n} from \"lucide-react\";\n\nexport default function EnterpriseSearchSolutionsPage() {\n  const enterpriseFeatures = [\n    {\n      icon: Search,\n      title: \"Unified Search Experience\",\n      description: \"Search across all enterprise data sources from a single interface\",\n      features: [\n        \"Federated search across systems\",\n        \"Single sign-on integration\",\n        \"Personalized search results\",\n        \"Advanced query capabilities\",\n        \"Mobile-optimized interface\"\n      ]\n    },\n    {\n      icon: Shield,\n      title: \"Enterprise Security\",\n      description: \"Comprehensive security controls for sensitive enterprise data\",\n      features: [\n        \"Role-based access control\",\n        \"Data classification and tagging\",\n        \"Audit trails and compliance\",\n        \"Encryption at rest and in transit\",\n        \"GDPR and privacy compliance\"\n      ]\n    },\n    {\n      icon: Database,\n      title: \"Data Source Connectors\",\n      description: \"Pre-built connectors for popular enterprise systems\",\n      features: [\n        \"Microsoft SharePoint integration\",\n        \"Salesforce connector\",\n        \"Confluence and Jira integration\",\n        \"File system crawlers\",\n        \"Database connectors\"\n      ]\n    },\n    {\n      icon: Users,\n      title: \"Collaboration & Knowledge\",\n      description: \"Enable knowledge sharing and collaboration across teams\",\n      features: [\n        \"Expert identification\",\n        \"Knowledge base integration\",\n        \"Social search features\",\n        \"Content recommendations\",\n        \"Team collaboration tools\"\n      ]\n    }\n  ];\n\n  const dataSources = [\n    {\n      category: \"Document Management\",\n      systems: [\"SharePoint\", \"Box\", \"Dropbox\", \"Google Drive\", \"OneDrive\", \"Documentum\"],\n      icon: FileText\n    },\n    {\n      category: \"Customer Relationship\",\n      systems: [\"Salesforce\", \"HubSpot\", \"Microsoft Dynamics\", \"ServiceNow\", \"Zendesk\"],\n      icon: Users\n    },\n    {\n      category: \"Collaboration Platforms\",\n      systems: [\"Slack\", \"Microsoft Teams\", \"Confluence\", \"Jira\", \"Notion\", \"Asana\"],\n      icon: Building\n    },\n    {\n      category: \"Business Intelligence\",\n      systems: [\"Tableau\", \"Power BI\", \"Looker\", \"Qlik Sense\", \"SAP Analytics\", \"Oracle BI\"],\n      icon: BarChart3\n    }\n  ];\n\n  const useCases = [\n    {\n      title: \"Knowledge Management\",\n      description: \"Create a centralized knowledge hub for your organization\",\n      benefits: [\n        \"Reduce knowledge silos\",\n        \"Accelerate employee onboarding\",\n        \"Improve decision making\",\n        \"Preserve institutional knowledge\"\n      ],\n      metrics: [\n        { label: \"Knowledge access time\", value: \"80% faster\" },\n        { label: \"Employee productivity\", value: \"35% increase\" },\n        { label: \"Support ticket reduction\", value: \"45%\" }\n      ]\n    },\n    {\n      title: \"Customer Support\",\n      description: \"Enable support teams to find answers quickly\",\n      benefits: [\n        \"Faster issue resolution\",\n        \"Consistent support quality\",\n        \"Self-service capabilities\",\n        \"Knowledge base automation\"\n      ],\n      metrics: [\n        { label: \"Resolution time\", value: \"60% faster\" },\n        { label: \"Customer satisfaction\", value: \"4.8/5\" },\n        { label: \"First-call resolution\", value: \"85%\" }\n      ]\n    },\n    {\n      title: \"Compliance & Legal\",\n      description: \"Ensure regulatory compliance and legal discovery\",\n      benefits: [\n        \"Automated compliance monitoring\",\n        \"Legal discovery capabilities\",\n        \"Audit trail maintenance\",\n        \"Risk assessment support\"\n      ],\n      metrics: [\n        { label: \"Compliance efficiency\", value: \"70% improvement\" },\n        { label: \"Legal discovery time\", value: \"50% reduction\" },\n        { label: \"Risk identification\", value: \"95% accuracy\" }\n      ]\n    }\n  ];\n\n  const implementationSteps = [\n    {\n      step: 1,\n      title: \"Discovery & Planning\",\n      description: \"Assess your data landscape and define search requirements\",\n      duration: \"2-4 weeks\",\n      deliverables: [\"Data inventory\", \"Search strategy\", \"Implementation roadmap\"]\n    },\n    {\n      step: 2,\n      title: \"Data Integration\",\n      description: \"Connect and index your enterprise data sources\",\n      duration: \"4-8 weeks\",\n      deliverables: [\"Data connectors\", \"Search indices\", \"Security configuration\"]\n    },\n    {\n      step: 3,\n      title: \"Customization & Testing\",\n      description: \"Configure search experience and conduct user testing\",\n      duration: \"2-4 weeks\",\n      deliverables: [\"Search interface\", \"User training\", \"Performance testing\"]\n    },\n    {\n      step: 4,\n      title: \"Deployment & Support\",\n      description: \"Launch enterprise search and provide ongoing support\",\n      duration: \"1-2 weeks\",\n      deliverables: [\"Production deployment\", \"User training\", \"Support documentation\"]\n    }\n  ];\n\n  const enterpriseMetrics = [\n    {\n      icon: Clock,\n      title: \"Implementation Time\",\n      value: \"8-12 weeks\",\n      description: \"From planning to production deployment\"\n    },\n    {\n      icon: Users,\n      title: \"User Adoption\",\n      value: \"90%+\",\n      description: \"Active user adoption within 6 months\"\n    },\n    {\n      icon: Zap,\n      title: \"Search Performance\",\n      value: \"<50ms\",\n      description: \"Average search response time\"\n    },\n    {\n      icon: Globe,\n      title: \"Data Coverage\",\n      value: \"99%\",\n      description: \"Enterprise data source coverage\"\n    }\n  ];\n\n  const successStories = [\n    {\n      company: \"Global Technology Firm\",\n      industry: \"Technology\",\n      challenge: \"Engineers couldn't find technical documentation across 50+ repositories\",\n      solution: \"Implemented unified search across code repositories, wikis, and documentation\",\n      results: [\n        \"70% reduction in time to find information\",\n        \"90% developer adoption rate\",\n        \"25% increase in code reuse\",\n        \"$2.1M annual productivity savings\"\n      ]\n    },\n    {\n      company: \"Healthcare Organization\",\n      industry: \"Healthcare\",\n      challenge: \"Medical staff struggled to access patient information and research\",\n      solution: \"Deployed secure search across EMR systems, research databases, and protocols\",\n      results: [\n        \"HIPAA-compliant search deployment\",\n        \"60% faster clinical decision making\",\n        \"99.9% search availability\",\n        \"Complete audit trail compliance\"\n      ]\n    },\n    {\n      company: \"Financial Services Company\",\n      industry: \"Financial Services\",\n      challenge: \"Regulatory compliance required fast access to historical records\",\n      solution: \"Built enterprise search with advanced security and compliance features\",\n      results: [\n        \"100% regulatory compliance achieved\",\n        \"80% faster legal discovery\",\n        \"Zero data security incidents\",\n        \"$5M reduction in compliance costs\"\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-purple-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              <span className=\"gradient-text\">Enterprise Search</span>\n              <br />for Modern Organizations\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Unlock the knowledge within your organization with enterprise-grade search \n              that connects all your data sources, teams, and workflows.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start Enterprise Search\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                Schedule Demo\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Enterprise Features */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Enterprise-Grade Search Capabilities\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Built for the security, scale, and complexity of modern enterprises\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {enterpriseFeatures.map((feature, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center mr-4\">\n                      <feature.icon className=\"h-5 w-5 text-purple-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{feature.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {feature.features.map((featureItem, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {featureItem}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Data Sources */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Connect All Your Data Sources\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Pre-built connectors for popular enterprise systems and platforms\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {dataSources.map((source, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <source.icon className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{source.category}</h3>\n                  <div className=\"flex flex-wrap gap-1 justify-center\">\n                    {source.systems.map((system, systemIndex) => (\n                      <Badge key={systemIndex} variant=\"outline\" className=\"text-xs mb-1\">\n                        {system}\n                      </Badge>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Enterprise Use Cases\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Transform how your organization finds and uses information\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {useCases.map((useCase, index) => (\n              <Card key={index} className=\"border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{useCase.title}</h3>\n                  <p className=\"text-gray-600 mb-4\">{useCase.description}</p>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Key Benefits</h4>\n                    <ul className=\"space-y-1\">\n                      {useCase.benefits.map((benefit, benefitIndex) => (\n                        <li key={benefitIndex} className=\"text-sm text-gray-600 flex items-start\">\n                          <div className=\"w-1.5 h-1.5 bg-purple-500 rounded-full mt-2 mr-2 flex-shrink-0\"></div>\n                          {benefit}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Impact Metrics</h4>\n                    <div className=\"space-y-2\">\n                      {useCase.metrics.map((metric, metricIndex) => (\n                        <div key={metricIndex} className=\"flex items-center justify-between\">\n                          <span className=\"text-sm text-gray-600\">{metric.label}</span>\n                          <Badge variant=\"outline\" className=\"text-purple-600 border-purple-300\">\n                            {metric.value}\n                          </Badge>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Implementation Process */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Implementation Process\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Structured approach to enterprise search deployment\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {implementationSteps.map((step, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-10 h-10 bg-primary-500 rounded-full flex items-center justify-center mb-4 text-white font-bold\">\n                    {step.step}\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{step.title}</h3>\n                  <p className=\"text-sm text-gray-600 mb-3\">{step.description}</p>\n                  <div className=\"text-sm\">\n                    <Badge variant=\"outline\" className=\"mb-3\">{step.duration}</Badge>\n                    <ul className=\"space-y-1 text-xs text-gray-500\">\n                      {step.deliverables.map((deliverable, deliverableIndex) => (\n                        <li key={deliverableIndex}>• {deliverable}</li>\n                      ))}\n                    </ul>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Enterprise Metrics */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Enterprise-Scale Performance\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Proven results across large-scale enterprise deployments\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {enterpriseMetrics.map((metric, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <metric.icon className=\"h-8 w-8 text-purple-600\" />\n                </div>\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">{metric.value}</div>\n                <div className=\"text-lg font-medium text-gray-900 mb-1\">{metric.title}</div>\n                <div className=\"text-sm text-gray-600\">{metric.description}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Success Stories */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Enterprise Success Stories\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Real transformations from global organizations\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {successStories.map((story, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <div className=\"mb-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">{story.company}</h3>\n                    <Badge variant=\"outline\">{story.industry}</Badge>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">Challenge</h4>\n                    <p className=\"text-sm text-gray-600\">{story.challenge}</p>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">Solution</h4>\n                    <p className=\"text-sm text-gray-600\">{story.solution}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Results</h4>\n                    <ul className=\"space-y-1\">\n                      {story.results.map((result, resultIndex) => (\n                        <li key={resultIndex} className=\"flex items-center text-sm\">\n                          <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                          {result}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Search Demo */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Enterprise Search Experience\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Discover how enterprise search transforms information access\n            </p>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\n            <div className=\"bg-white rounded-lg p-6\">\n              <div className=\"mb-6\">\n                <div className=\"relative\">\n                  <input \n                    type=\"text\" \n                    placeholder=\"Search across all enterprise systems...\"\n                    className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                  />\n                  <Search className=\"absolute right-4 top-3.5 h-5 w-5 text-gray-400\" />\n                </div>\n                <div className=\"flex items-center mt-3 space-x-4 text-sm text-gray-600\">\n                  <span>Recent searches:</span>\n                  <Badge variant=\"outline\" className=\"text-xs cursor-pointer\">company policy</Badge>\n                  <Badge variant=\"outline\" className=\"text-xs cursor-pointer\">project roadmap</Badge>\n                  <Badge variant=\"outline\" className=\"text-xs cursor-pointer\">client contract</Badge>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                  <Building className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">500+</div>\n                  <div className=\"text-sm text-gray-600\">Data Sources</div>\n                </div>\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <FileText className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">50M+</div>\n                  <div className=\"text-sm text-gray-600\">Documents Indexed</div>\n                </div>\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <Users className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">10K+</div>\n                  <div className=\"text-sm text-gray-600\">Active Users</div>\n                </div>\n                <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                  <Lock className=\"h-8 w-8 text-orange-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">100%</div>\n                  <div className=\"text-sm text-gray-600\">Secure Access</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n                <div className=\"lg:col-span-1\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Data Sources</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded text-sm\">\n                      <span>SharePoint</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">2.3M docs</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded text-sm\">\n                      <span>Salesforce</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">156K records</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded text-sm\">\n                      <span>Confluence</span>\n                      <Badge variant=\"outline\" className=\"text-xs\">89K pages</Badge>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"lg:col-span-2\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Search Results</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"p-3 border border-gray-200 rounded-lg\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <div className=\"font-medium text-gray-900\">Q4 Financial Report</div>\n                          <div className=\"text-sm text-gray-600\">SharePoint • Finance Team • Updated 2 days ago</div>\n                        </div>\n                        <Badge variant=\"outline\" className=\"text-xs\">PDF</Badge>\n                      </div>\n                    </div>\n                    <div className=\"p-3 border border-gray-200 rounded-lg\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <div className=\"font-medium text-gray-900\">Client Onboarding Process</div>\n                          <div className=\"text-sm text-gray-600\">Confluence • Operations • Updated 1 week ago</div>\n                        </div>\n                        <Badge variant=\"outline\" className=\"text-xs\">Wiki</Badge>\n                      </div>\n                    </div>\n                    <div className=\"p-3 border border-gray-200 rounded-lg\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <div className=\"font-medium text-gray-900\">Enterprise Account - ABC Corp</div>\n                          <div className=\"text-sm text-gray-600\">Salesforce • Sales Team • Updated 3 hours ago</div>\n                        </div>\n                        <Badge variant=\"outline\" className=\"text-xs\">CRM</Badge>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Transform Your Enterprise Search\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Connect all your enterprise data and empower your teams with intelligent search.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Start Enterprise Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Contact Enterprise Sales\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":26215},"client/src/pages/solutions/observability.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Activity, \n  Eye, \n  AlertTriangle, \n  BarChart3, \n  Zap,\n  CheckCircle,\n  ArrowRight,\n  Server,\n  Database,\n  Network,\n  Clock,\n  TrendingUp,\n  Shield\n} from \"lucide-react\";\n\nexport default function ObservabilitySolutionsPage() {\n  const observabilityPillars = [\n    {\n      icon: BarChart3,\n      title: \"Metrics & Monitoring\",\n      description: \"Real-time metrics collection and monitoring across your entire infrastructure\",\n      features: [\n        \"Custom metrics dashboards\",\n        \"Real-time alerting\",\n        \"Historical trend analysis\",\n        \"Multi-dimensional metrics\",\n        \"Automatic anomaly detection\"\n      ]\n    },\n    {\n      icon: Activity,\n      title: \"Distributed Tracing\",\n      description: \"End-to-end visibility into requests across microservices and systems\",\n      features: [\n        \"Service dependency mapping\",\n        \"Request flow visualization\",\n        \"Performance bottleneck identification\",\n        \"Error rate tracking\",\n        \"Latency analysis\"\n      ]\n    },\n    {\n      icon: Eye,\n      title: \"Log Analytics\",\n      description: \"Centralized log aggregation and analysis for troubleshooting and insights\",\n      features: [\n        \"Structured and unstructured logs\",\n        \"Real-time log streaming\",\n        \"Pattern recognition\",\n        \"Error correlation\",\n        \"Custom log parsing\"\n      ]\n    },\n    {\n      icon: Shield,\n      title: \"Infrastructure Monitoring\",\n      description: \"Comprehensive monitoring of servers, containers, and cloud resources\",\n      features: [\n        \"Resource utilization tracking\",\n        \"Container orchestration monitoring\",\n        \"Cloud service integration\",\n        \"Capacity planning insights\",\n        \"Performance optimization\"\n      ]\n    }\n  ];\n\n  const useCases = [\n    {\n      title: \"Application Performance Monitoring\",\n      description: \"Monitor application health and user experience in real-time\",\n      benefits: [\n        \"Faster incident resolution\",\n        \"Improved user experience\",\n        \"Proactive issue detection\",\n        \"Performance optimization\"\n      ],\n      metrics: [\n        { label: \"MTTR reduction\", value: \"75%\" },\n        { label: \"Uptime improvement\", value: \"99.99%\" },\n        { label: \"Alert accuracy\", value: \"95%\" }\n      ]\n    },\n    {\n      title: \"DevOps & SRE\",\n      description: \"Enable teams to maintain reliable, scalable systems\",\n      benefits: [\n        \"Automated incident response\",\n        \"Service level monitoring\",\n        \"Deployment tracking\",\n        \"Resource optimization\"\n      ],\n      metrics: [\n        { label: \"Deployment velocity\", value: \"3x faster\" },\n        { label: \"System reliability\", value: \"99.9%\" },\n        { label: \"Cost optimization\", value: \"30%\" }\n      ]\n    },\n    {\n      title: \"Cloud Migration\",\n      description: \"Gain visibility during cloud transformation and migration\",\n      benefits: [\n        \"Migration progress tracking\",\n        \"Performance comparison\",\n        \"Cost monitoring\",\n        \"Risk mitigation\"\n      ],\n      metrics: [\n        { label: \"Migration success rate\", value: \"98%\" },\n        { label: \"Performance baseline\", value: \"Maintained\" },\n        { label: \"Cost visibility\", value: \"100%\" }\n      ]\n    }\n  ];\n\n  const integrations = [\n    {\n      category: \"Infrastructure\",\n      tools: [\"AWS CloudWatch\", \"Azure Monitor\", \"Google Cloud Monitoring\", \"Kubernetes\", \"Docker\", \"Prometheus\"]\n    },\n    {\n      category: \"APM & Tracing\",\n      tools: [\"Jaeger\", \"Zipkin\", \"OpenTelemetry\", \"New Relic\", \"Datadog\", \"AppDynamics\"]\n    },\n    {\n      category: \"Log Sources\",\n      tools: [\"Fluentd\", \"Logstash\", \"Filebeat\", \"Syslog\", \"Docker Logs\", \"CloudTrail\"]\n    },\n    {\n      category: \"Alerting\",\n      tools: [\"PagerDuty\", \"Slack\", \"Microsoft Teams\", \"JIRA\", \"ServiceNow\", \"Webhook\"]\n    }\n  ];\n\n  const architectureComponents = [\n    {\n      icon: Server,\n      title: \"Data Ingestion\",\n      description: \"High-throughput data collection from multiple sources\",\n      capabilities: [\n        \"Real-time streaming ingestion\",\n        \"Batch data processing\",\n        \"Auto-scaling data pipelines\",\n        \"Data transformation and enrichment\"\n      ]\n    },\n    {\n      icon: Database,\n      title: \"Storage & Indexing\",\n      description: \"Efficient storage and fast retrieval of observability data\",\n      capabilities: [\n        \"Time-series optimized storage\",\n        \"Intelligent data retention\",\n        \"Index lifecycle management\",\n        \"Cross-cluster replication\"\n      ]\n    },\n    {\n      icon: BarChart3,\n      title: \"Analytics Engine\",\n      description: \"Powerful analytics and correlation across all data types\",\n      capabilities: [\n        \"Real-time aggregations\",\n        \"Machine learning insights\",\n        \"Cross-data correlation\",\n        \"Predictive analytics\"\n      ]\n    },\n    {\n      icon: AlertTriangle,\n      title: \"Alerting & Response\",\n      description: \"Intelligent alerting and automated response workflows\",\n      capabilities: [\n        \"Smart alert routing\",\n        \"Escalation policies\",\n        \"Alert suppression\",\n        \"Automated remediation\"\n      ]\n    }\n  ];\n\n  const performanceMetrics = [\n    {\n      icon: Zap,\n      title: \"Data Ingestion\",\n      value: \"1M+\",\n      description: \"Events per second processing capacity\"\n    },\n    {\n      icon: Clock,\n      title: \"Query Response\",\n      value: \"<100ms\",\n      description: \"Average dashboard load time\"\n    },\n    {\n      icon: TrendingUp,\n      title: \"Data Retention\",\n      value: \"2+ years\",\n      description: \"Long-term historical analysis\"\n    },\n    {\n      icon: Network,\n      title: \"Availability\",\n      value: \"99.99%\",\n      description: \"Platform uptime guarantee\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-green-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              Complete\n              <span className=\"gradient-text\"> Observability</span>\n              <br />Platform\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Gain deep insights into your applications and infrastructure with unified \n              monitoring, logging, and tracing capabilities.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start Monitoring\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                View Demo\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Three Pillars of Observability */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Complete Observability Stack\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Metrics, traces, logs, and infrastructure monitoring in one unified platform\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {observabilityPillars.map((pillar, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center mr-4\">\n                      <pillar.icon className=\"h-5 w-5 text-green-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{pillar.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{pillar.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {pillar.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Observability Use Cases\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              From application monitoring to infrastructure optimization\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {useCases.map((useCase, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{useCase.title}</h3>\n                  <p className=\"text-gray-600 mb-4\">{useCase.description}</p>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Key Benefits</h4>\n                    <ul className=\"space-y-1\">\n                      {useCase.benefits.map((benefit, benefitIndex) => (\n                        <li key={benefitIndex} className=\"text-sm text-gray-600 flex items-start\">\n                          <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full mt-2 mr-2 flex-shrink-0\"></div>\n                          {benefit}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Results</h4>\n                    <div className=\"space-y-2\">\n                      {useCase.metrics.map((metric, metricIndex) => (\n                        <div key={metricIndex} className=\"flex items-center justify-between\">\n                          <span className=\"text-sm text-gray-600\">{metric.label}</span>\n                          <Badge variant=\"outline\" className=\"text-green-600 border-green-300\">\n                            {metric.value}\n                          </Badge>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Architecture Components */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Platform Architecture\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Scalable, reliable infrastructure designed for enterprise observability\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {architectureComponents.map((component, index) => (\n              <Card key={index} className=\"border border-gray-200 text-center\">\n                <CardContent className=\"p-6\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <component.icon className=\"h-6 w-6 text-blue-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{component.title}</h3>\n                  <p className=\"text-sm text-gray-600 mb-4\">{component.description}</p>\n                  <ul className=\"space-y-1 text-xs text-gray-500\">\n                    {component.capabilities.map((capability, capIndex) => (\n                      <li key={capIndex}>{capability}</li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Performance Metrics */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Performance at Scale\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Built to handle enterprise-scale observability workloads\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {performanceMetrics.map((metric, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <metric.icon className=\"h-8 w-8 text-green-600\" />\n                </div>\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">{metric.value}</div>\n                <div className=\"text-lg font-medium text-gray-900 mb-1\">{metric.title}</div>\n                <div className=\"text-sm text-gray-600\">{metric.description}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Integrations */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Comprehensive Integrations\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Connect with your existing tools and infrastructure\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {integrations.map((category, index) => (\n              <Card key={index} className=\"border border-gray-200\">\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">{category.category}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {category.tools.map((tool, toolIndex) => (\n                      <Badge key={toolIndex} variant=\"outline\" className=\"text-xs\">\n                        {tool}\n                      </Badge>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Observability Dashboard Preview */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Unified Observability Dashboard\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Get a complete view of your system health and performance\n            </p>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\n            <div className=\"bg-white rounded-lg p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">System Overview</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"text-green-600\">Healthy</Badge>\n                  <Button size=\"sm\" variant=\"outline\">\n                    <Activity className=\"h-4 w-4 mr-2\" />\n                    Live View\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-gradient-to-r from-green-400 to-green-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">99.99%</div>\n                  <div className=\"text-green-100 text-sm\">System Uptime</div>\n                  <div className=\"text-xs text-green-200\">Last 30 days</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-blue-400 to-blue-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">1.2M</div>\n                  <div className=\"text-blue-100 text-sm\">Requests/Hour</div>\n                  <div className=\"text-xs text-blue-200\">Peak: 2.1M</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-purple-400 to-purple-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">127ms</div>\n                  <div className=\"text-purple-100 text-sm\">Avg Response Time</div>\n                  <div className=\"text-xs text-purple-200\">P95: 245ms</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-orange-400 to-orange-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">0.02%</div>\n                  <div className=\"text-orange-100 text-sm\">Error Rate</div>\n                  <div className=\"text-xs text-orange-200\">Target: &lt; 0.1%</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Service Health</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm\">API Gateway</span>\n                      </div>\n                      <Badge variant=\"outline\" className=\"text-green-600\">Healthy</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm\">User Service</span>\n                      </div>\n                      <Badge variant=\"outline\" className=\"text-green-600\">Healthy</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-3 h-3 bg-yellow-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm\">Payment Service</span>\n                      </div>\n                      <Badge variant=\"outline\" className=\"text-yellow-600\">Warning</Badge>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-3 h-3 bg-green-500 rounded-full mr-3\"></div>\n                        <span className=\"text-sm\">Database Cluster</span>\n                      </div>\n                      <Badge variant=\"outline\" className=\"text-green-600\">Healthy</Badge>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Recent Alerts</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <AlertTriangle className=\"w-4 h-4 text-yellow-500 mr-2\" />\n                        <span>High memory usage</span>\n                      </div>\n                      <span className=\"text-gray-500\">3 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                        <span>Deployment completed</span>\n                      </div>\n                      <span className=\"text-gray-500\">15 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <Activity className=\"w-4 h-4 text-blue-500 mr-2\" />\n                        <span>Auto-scaling triggered</span>\n                      </div>\n                      <span className=\"text-gray-500\">1 hour ago</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Start Monitoring Today\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Get complete visibility into your applications and infrastructure in minutes.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Start Free Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Book Demo\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":22497},"client/src/pages/solutions/search.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Search, \n  Zap, \n  Target, \n  TrendingUp, \n  CheckCircle,\n  ArrowRight,\n  ShoppingCart,\n  FileText,\n  Globe,\n  Users,\n  Star,\n  Filter\n} from \"lucide-react\";\n\nexport default function SearchSolutionsPage() {\n  const searchFeatures = [\n    {\n      icon: Search,\n      title: \"Full-Text Search\",\n      description: \"Advanced text search with relevance scoring and highlighting\",\n      features: [\n        \"BM25 relevance scoring\",\n        \"Multi-field search\",\n        \"Fuzzy matching and typo tolerance\",\n        \"Search result highlighting\",\n        \"Autocomplete and suggestions\"\n      ]\n    },\n    {\n      icon: Filter,\n      title: \"Faceted Search\",\n      description: \"Interactive filters and facets for refined search results\",\n      features: [\n        \"Dynamic facet generation\",\n        \"Range and date filters\",\n        \"Multi-select filtering\",\n        \"Nested facet hierarchies\",\n        \"Real-time result counts\"\n      ]\n    },\n    {\n      icon: Target,\n      title: \"Personalization\",\n      description: \"Tailored search experiences based on user behavior\",\n      features: [\n        \"User preference learning\",\n        \"Behavioral scoring\",\n        \"Click-through optimization\",\n        \"A/B testing framework\",\n        \"Real-time personalization\"\n      ]\n    },\n    {\n      icon: TrendingUp,\n      title: \"Analytics & Insights\",\n      description: \"Deep insights into search performance and user behavior\",\n      features: [\n        \"Search analytics dashboard\",\n        \"Query performance metrics\",\n        \"User engagement tracking\",\n        \"Conversion rate analysis\",\n        \"Search result optimization\"\n      ]\n    }\n  ];\n\n  const useCases = [\n    {\n      icon: ShoppingCart,\n      title: \"E-commerce Product Search\",\n      description: \"Build powerful product discovery experiences that drive sales\",\n      features: [\n        \"Product catalog search\",\n        \"Visual search capabilities\",\n        \"Inventory-aware results\",\n        \"Price and availability filters\",\n        \"Recommendation engine\"\n      ],\n      metrics: [\n        { label: \"Conversion increase\", value: \"35%\" },\n        { label: \"Search accuracy\", value: \"98%\" },\n        { label: \"Response time\", value: \"<50ms\" }\n      ]\n    },\n    {\n      icon: FileText,\n      title: \"Content Management\",\n      description: \"Enable users to find content quickly across your organization\",\n      features: [\n        \"Document search and indexing\",\n        \"Metadata extraction\",\n        \"Content type filtering\",\n        \"Version control integration\",\n        \"Access control enforcement\"\n      ],\n      metrics: [\n        { label: \"Content discovery\", value: \"60% faster\" },\n        { label: \"User satisfaction\", value: \"4.8/5\" },\n        { label: \"Search coverage\", value: \"99.5%\" }\n      ]\n    },\n    {\n      icon: Globe,\n      title: \"Website Search\",\n      description: \"Comprehensive site search that understands your content\",\n      features: [\n        \"Web crawler integration\",\n        \"Dynamic content indexing\",\n        \"Multi-language support\",\n        \"Mobile optimization\",\n        \"SEO-friendly results\"\n      ],\n      metrics: [\n        { label: \"Bounce rate reduction\", value: \"25%\" },\n        { label: \"Page views increase\", value: \"40%\" },\n        { label: \"Time on site\", value: \"+3 minutes\" }\n      ]\n    }\n  ];\n\n  const technicalCapabilities = [\n    {\n      category: \"Search Engine\",\n      features: [\n        \"Elasticsearch-powered indexing\",\n        \"Real-time search updates\",\n        \"Distributed search architecture\",\n        \"Auto-scaling capabilities\",\n        \"Multi-language analysis\"\n      ]\n    },\n    {\n      category: \"APIs & SDKs\",\n      features: [\n        \"RESTful search APIs\",\n        \"GraphQL support\",\n        \"JavaScript SDK\",\n        \"Python client library\",\n        \"Mobile SDK support\"\n      ]\n    },\n    {\n      category: \"Integration\",\n      features: [\n        \"CMS integration plugins\",\n        \"E-commerce platform connectors\",\n        \"Database synchronization\",\n        \"Webhook notifications\",\n        \"Third-party API support\"\n      ]\n    },\n    {\n      category: \"Performance\",\n      features: [\n        \"Sub-50ms query response\",\n        \"99.99% uptime SLA\",\n        \"Auto-scaling infrastructure\",\n        \"Global CDN distribution\",\n        \"Real-time monitoring\"\n      ]\n    }\n  ];\n\n  const industryExamples = [\n    {\n      industry: \"Retail & E-commerce\",\n      company: \"Fashion Retailer\",\n      challenge: \"Low product discovery and conversion rates\",\n      solution: \"Implemented AI-powered product search with visual similarity\",\n      results: [\"45% increase in conversion\", \"60% reduction in bounce rate\", \"2.3x increase in average order value\"]\n    },\n    {\n      industry: \"Media & Publishing\",\n      company: \"News Organization\",\n      challenge: \"Users couldn't find relevant articles across large content archive\",\n      solution: \"Deployed semantic search with content categorization\",\n      results: [\"70% faster content discovery\", \"85% user satisfaction\", \"40% increase in page views\"]\n    },\n    {\n      industry: \"Healthcare\",\n      company: \"Medical Research Institute\",\n      challenge: \"Researchers struggled to find relevant studies and papers\",\n      solution: \"Built specialized medical search with terminology recognition\",\n      results: [\"80% faster research\", \"95% accuracy in results\", \"50% reduction in research time\"]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-blue-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              <span className=\"gradient-text\">Search Applications</span>\n              <br />That Convert\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Build powerful search experiences that help users find exactly what they're looking for. \n              From e-commerce product discovery to enterprise content search.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start Building Search\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                View Demo\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Core Search Features */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Advanced Search Capabilities\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Everything you need to build world-class search experiences\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {searchFeatures.map((feature, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center mr-4\">\n                      <feature.icon className=\"h-5 w-5 text-blue-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{feature.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {feature.features.map((featureItem, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {featureItem}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Search Solutions by Use Case\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Tailored search experiences for different industries and applications\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {useCases.map((useCase, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardHeader>\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-primary-100 rounded-lg flex items-center justify-center mr-4\">\n                      <useCase.icon className=\"h-5 w-5 text-primary-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{useCase.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{useCase.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Key Features</h4>\n                    <ul className=\"space-y-1\">\n                      {useCase.features.map((feature, featureIndex) => (\n                        <li key={featureIndex} className=\"text-sm text-gray-600 flex items-start\">\n                          <div className=\"w-1.5 h-1.5 bg-primary-500 rounded-full mt-2 mr-2 flex-shrink-0\"></div>\n                          {feature}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Performance Metrics</h4>\n                    <div className=\"space-y-2\">\n                      {useCase.metrics.map((metric, metricIndex) => (\n                        <div key={metricIndex} className=\"flex items-center justify-between\">\n                          <span className=\"text-sm text-gray-600\">{metric.label}</span>\n                          <Badge variant=\"outline\" className=\"text-green-600 border-green-300\">\n                            {metric.value}\n                          </Badge>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Technical Capabilities */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Technical Architecture\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Enterprise-grade search infrastructure built for scale and performance\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {technicalCapabilities.map((category, index) => (\n              <div key={index}>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{category.category}</h3>\n                <ul className=\"space-y-3\">\n                  {category.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-start\">\n                      <div className=\"w-2 h-2 bg-primary-500 rounded-full mt-2 mr-3 flex-shrink-0\"></div>\n                      <span className=\"text-sm text-gray-600\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Industry Examples */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Success Stories\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Real results from organizations that transformed their search experience\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {industryExamples.map((example, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <div className=\"mb-4\">\n                    <Badge variant=\"outline\" className=\"mb-3\">{example.industry}</Badge>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{example.company}</h3>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">Challenge</h4>\n                    <p className=\"text-sm text-gray-600\">{example.challenge}</p>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">Solution</h4>\n                    <p className=\"text-sm text-gray-600\">{example.solution}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Results</h4>\n                    <ul className=\"space-y-1\">\n                      {example.results.map((result, resultIndex) => (\n                        <li key={resultIndex} className=\"flex items-center text-sm\">\n                          <Star className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                          {result}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Search Demo */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Interactive Search Experience\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              See how our search technology delivers instant, relevant results\n            </p>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\n            <div className=\"bg-white rounded-lg p-6\">\n              <div className=\"mb-6\">\n                <div className=\"relative\">\n                  <input \n                    type=\"text\" \n                    placeholder=\"Search for products, articles, or documents...\"\n                    className=\"w-full px-4 py-3 pr-12 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                  />\n                  <Search className=\"absolute right-4 top-3.5 h-5 w-5 text-gray-400\" />\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <Zap className=\"h-8 w-8 text-blue-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">&lt; 50ms</div>\n                  <div className=\"text-sm text-gray-600\">Average Response</div>\n                </div>\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <Target className=\"h-8 w-8 text-green-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">98%</div>\n                  <div className=\"text-sm text-gray-600\">Search Accuracy</div>\n                </div>\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                  <Users className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">10M+</div>\n                  <div className=\"text-sm text-gray-600\">Queries/Month</div>\n                </div>\n                <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                  <Globe className=\"h-8 w-8 text-orange-600 mx-auto mb-2\" />\n                  <div className=\"text-2xl font-bold text-gray-900\">50+</div>\n                  <div className=\"text-sm text-gray-600\">Languages</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\n                <div className=\"lg:col-span-1\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Search Filters</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                      <span className=\"text-sm\">Category</span>\n                      <span className=\"text-xs text-gray-500\">12 options</span>\n                    </div>\n                    <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                      <span className=\"text-sm\">Price Range</span>\n                      <span className=\"text-xs text-gray-500\">$0 - $500+</span>\n                    </div>\n                    <div className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                      <span className=\"text-sm\">Availability</span>\n                      <span className=\"text-xs text-gray-500\">In Stock</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"lg:col-span-2\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Search Results</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"p-3 border border-gray-200 rounded-lg\">\n                      <div className=\"font-medium text-gray-900\">Sample Product 1</div>\n                      <div className=\"text-sm text-gray-600\">High-quality search result with relevance highlighting</div>\n                      <div className=\"flex items-center mt-2\">\n                        <Badge variant=\"outline\" className=\"mr-2\">In Stock</Badge>\n                        <span className=\"text-sm text-gray-500\">98% relevance</span>\n                      </div>\n                    </div>\n                    <div className=\"p-3 border border-gray-200 rounded-lg\">\n                      <div className=\"font-medium text-gray-900\">Sample Product 2</div>\n                      <div className=\"text-sm text-gray-600\">Another relevant result with semantic matching</div>\n                      <div className=\"flex items-center mt-2\">\n                        <Badge variant=\"outline\" className=\"mr-2\">Limited Stock</Badge>\n                        <span className=\"text-sm text-gray-500\">95% relevance</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Ready to Transform Your Search?\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Start building powerful search applications that your users will love.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Start Free Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Contact Sales\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":20767},"client/src/pages/solutions/security.tsx":{"content":"import Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { \n  Shield, \n  Eye, \n  AlertTriangle, \n  Search, \n  Brain,\n  CheckCircle,\n  ArrowRight,\n  Lock,\n  UserCheck,\n  FileText,\n  Activity,\n  Bell,\n  TrendingUp\n} from \"lucide-react\";\n\nexport default function SecurityAnalyticsSolutionsPage() {\n  const securityCapabilities = [\n    {\n      icon: Shield,\n      title: \"SIEM & Security Operations\",\n      description: \"Real-time security event monitoring and incident response\",\n      features: [\n        \"Security event correlation\",\n        \"Threat intelligence integration\",\n        \"Automated incident response\",\n        \"Compliance reporting\",\n        \"SOC dashboard integration\"\n      ]\n    },\n    {\n      icon: Eye,\n      title: \"Threat Detection\",\n      description: \"Advanced threat detection using machine learning and behavioral analysis\",\n      features: [\n        \"Behavioral anomaly detection\",\n        \"Signature-based detection\",\n        \"Machine learning models\",\n        \"Zero-day threat identification\",\n        \"Advanced persistent threat (APT) detection\"\n      ]\n    },\n    {\n      icon: Search,\n      title: \"Threat Hunting\",\n      description: \"Proactive threat hunting capabilities for security analysts\",\n      features: [\n        \"Custom query language\",\n        \"Historical data analysis\",\n        \"Indicator of compromise (IOC) tracking\",\n        \"Threat hypothesis testing\",\n        \"Security data exploration\"\n      ]\n    },\n    {\n      icon: Brain,\n      title: \"Security Analytics\",\n      description: \"AI-powered security analytics for faster threat identification\",\n      features: [\n        \"Risk scoring algorithms\",\n        \"User behavior analytics (UBA)\",\n        \"Entity behavior analytics (EBA)\",\n        \"Predictive threat modeling\",\n        \"Security metrics and KPIs\"\n      ]\n    }\n  ];\n\n  const threatTypes = [\n    {\n      title: \"Malware & Ransomware\",\n      description: \"Detect and respond to malicious software attacks\",\n      detectionMethods: [\n        \"File hash analysis\",\n        \"Behavioral pattern recognition\",\n        \"Network traffic analysis\",\n        \"Endpoint telemetry correlation\"\n      ],\n      responseTime: \"< 5 minutes\",\n      accuracy: \"99.2%\"\n    },\n    {\n      title: \"Insider Threats\",\n      description: \"Identify suspicious behavior from internal users\",\n      detectionMethods: [\n        \"User behavior baseline analysis\",\n        \"Privilege escalation detection\",\n        \"Data access pattern monitoring\",\n        \"Anomalous activity identification\"\n      ],\n      responseTime: \"< 10 minutes\",\n      accuracy: \"95.8%\"\n    },\n    {\n      title: \"Advanced Persistent Threats\",\n      description: \"Long-term threat campaigns targeting your organization\",\n      detectionMethods: [\n        \"Multi-stage attack correlation\",\n        \"Lateral movement detection\",\n        \"Command and control identification\",\n        \"Persistence mechanism analysis\"\n      ],\n      responseTime: \"< 15 minutes\",\n      accuracy: \"94.5%\"\n    }\n  ];\n\n  const complianceFrameworks = [\n    {\n      name: \"SOC 2\",\n      description: \"Service Organization Control 2\",\n      coverage: [\"Security\", \"Availability\", \"Processing Integrity\", \"Confidentiality\"],\n      automated: \"95%\"\n    },\n    {\n      name: \"PCI DSS\",\n      description: \"Payment Card Industry Data Security Standard\",\n      coverage: [\"Network Security\", \"Data Protection\", \"Access Control\", \"Monitoring\"],\n      automated: \"90%\"\n    },\n    {\n      name: \"GDPR\",\n      description: \"General Data Protection Regulation\",\n      coverage: [\"Data Processing\", \"Privacy Rights\", \"Breach Notification\", \"Consent Management\"],\n      automated: \"85%\"\n    },\n    {\n      name: \"HIPAA\",\n      description: \"Health Insurance Portability and Accountability Act\",\n      coverage: [\"Physical Safeguards\", \"Administrative Safeguards\", \"Technical Safeguards\"],\n      automated: \"88%\"\n    }\n  ];\n\n  const useCase = [\n    {\n      industry: \"Financial Services\",\n      challenge: \"Detect fraudulent transactions and insider trading\",\n      solution: \"Real-time transaction monitoring with ML-based fraud detection\",\n      results: [\n        \"99.7% fraud detection accuracy\",\n        \"< 100ms transaction processing\",\n        \"75% reduction in false positives\",\n        \"$2.3M annual fraud prevention\"\n      ]\n    },\n    {\n      industry: \"Healthcare\",\n      challenge: \"Protect patient data and ensure HIPAA compliance\",\n      solution: \"Comprehensive data access monitoring and breach detection\",\n      results: [\n        \"100% HIPAA compliance achieved\",\n        \"Zero patient data breaches\",\n        \"90% faster incident response\",\n        \"Complete audit trail visibility\"\n      ]\n    },\n    {\n      industry: \"Technology\",\n      challenge: \"Secure cloud infrastructure and intellectual property\",\n      solution: \"Cloud-native security monitoring with automated response\",\n      results: [\n        \"99.99% infrastructure uptime\",\n        \"Zero successful data exfiltration\",\n        \"60% reduction in security incidents\",\n        \"Automated threat remediation\"\n      ]\n    }\n  ];\n\n  const securityMetrics = [\n    {\n      icon: Bell,\n      title: \"Mean Time to Detection\",\n      value: \"< 2 min\",\n      description: \"Average time to identify security threats\"\n    },\n    {\n      icon: Activity,\n      title: \"Mean Time to Response\",\n      value: \"< 10 min\",\n      description: \"Average incident response time\"\n    },\n    {\n      icon: TrendingUp,\n      title: \"Threat Detection Rate\",\n      value: \"99.5%\",\n      description: \"Successful threat identification rate\"\n    },\n    {\n      icon: CheckCircle,\n      title: \"False Positive Rate\",\n      value: \"< 2%\",\n      description: \"Accuracy of security alerts\"\n    }\n  ];\n\n  const integrations = [\n    {\n      category: \"SIEM Platforms\",\n      tools: [\"Splunk\", \"IBM QRadar\", \"ArcSight\", \"LogRhythm\", \"AlienVault\", \"Sumo Logic\"]\n    },\n    {\n      category: \"Endpoint Security\",\n      tools: [\"CrowdStrike\", \"Carbon Black\", \"SentinelOne\", \"Symantec\", \"McAfee\", \"Trend Micro\"]\n    },\n    {\n      category: \"Network Security\",\n      tools: [\"Palo Alto\", \"Cisco ASA\", \"Fortinet\", \"Check Point\", \"pfSense\", \"SonicWall\"]\n    },\n    {\n      category: \"Cloud Security\",\n      tools: [\"AWS GuardDuty\", \"Azure Sentinel\", \"Google Chronicle\", \"Prisma Cloud\", \"CloudTrail\"]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"pt-24 pb-12 bg-gradient-to-br from-red-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n              Advanced\n              <span className=\"gradient-text\"> Security Analytics</span>\n              <br />& SIEM Platform\n            </h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-8\">\n              Protect your organization with AI-powered threat detection, real-time security monitoring, \n              and automated incident response capabilities.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-primary-500 text-white hover:bg-primary-600\">\n                Start Security Trial\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-primary-500 text-primary-600\">\n                Request Demo\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Security Capabilities */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Comprehensive Security Operations\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Full-spectrum security analytics from detection to response\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {securityCapabilities.map((capability, index) => (\n              <Card key={index} className=\"border border-gray-200 hover:border-primary-300 transition-colors\">\n                <CardHeader className=\"pb-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"w-10 h-10 bg-red-100 rounded-lg flex items-center justify-center mr-4\">\n                      <capability.icon className=\"h-5 w-5 text-red-600\" />\n                    </div>\n                    <CardTitle className=\"text-xl\">{capability.title}</CardTitle>\n                  </div>\n                  <p className=\"text-gray-600\">{capability.description}</p>\n                </CardHeader>\n                <CardContent>\n                  <ul className=\"space-y-2\">\n                    {capability.features.map((feature, featureIndex) => (\n                      <li key={featureIndex} className=\"flex items-center text-sm\">\n                        <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                        {feature}\n                      </li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Threat Detection */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Advanced Threat Detection\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              AI-powered detection for modern security threats\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {threatTypes.map((threat, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{threat.title}</h3>\n                  <p className=\"text-gray-600 mb-4\">{threat.description}</p>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Detection Methods</h4>\n                    <ul className=\"space-y-1\">\n                      {threat.detectionMethods.map((method, methodIndex) => (\n                        <li key={methodIndex} className=\"text-sm text-gray-600 flex items-start\">\n                          <div className=\"w-1.5 h-1.5 bg-red-500 rounded-full mt-2 mr-2 flex-shrink-0\"></div>\n                          {method}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <div className=\"text-2xl font-bold text-primary-600\">{threat.responseTime}</div>\n                      <div className=\"text-sm text-gray-600\">Response Time</div>\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold text-green-600\">{threat.accuracy}</div>\n                      <div className=\"text-sm text-gray-600\">Detection Accuracy</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Performance Metrics */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Security Performance Metrics\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Proven security effectiveness in enterprise environments\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {securityMetrics.map((metric, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <metric.icon className=\"h-8 w-8 text-red-600\" />\n                </div>\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">{metric.value}</div>\n                <div className=\"text-lg font-medium text-gray-900 mb-1\">{metric.title}</div>\n                <div className=\"text-sm text-gray-600\">{metric.description}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Compliance Frameworks */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Compliance & Regulatory Support\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Automated compliance monitoring and reporting for major frameworks\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {complianceFrameworks.map((framework, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                    <FileText className=\"h-6 w-6 text-green-600\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{framework.name}</h3>\n                  <p className=\"text-sm text-gray-600 mb-4\">{framework.description}</p>\n                  \n                  <div className=\"mb-4\">\n                    <div className=\"text-2xl font-bold text-green-600\">{framework.automated}</div>\n                    <div className=\"text-sm text-gray-600\">Automated Coverage</div>\n                  </div>\n                  \n                  <ul className=\"space-y-1 text-xs text-gray-500\">\n                    {framework.coverage.map((area, areaIndex) => (\n                      <li key={areaIndex}>{area}</li>\n                    ))}\n                  </ul>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Use Cases */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Industry Success Stories\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Real-world security analytics implementations and results\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {useCase.map((story, index) => (\n              <Card key={index} className=\"border border-gray-200\">\n                <CardContent className=\"p-6\">\n                  <Badge variant=\"outline\" className=\"mb-4\">{story.industry}</Badge>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">Challenge</h4>\n                    <p className=\"text-sm text-gray-600\">{story.challenge}</p>\n                  </div>\n                  \n                  <div className=\"mb-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-1\">Solution</h4>\n                    <p className=\"text-sm text-gray-600\">{story.solution}</p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Results</h4>\n                    <ul className=\"space-y-1\">\n                      {story.results.map((result, resultIndex) => (\n                        <li key={resultIndex} className=\"flex items-center text-sm\">\n                          <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                          {result}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Integrations */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Security Tool Integrations\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Connect with your existing security infrastructure\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {integrations.map((category, index) => (\n              <Card key={index} className=\"bg-white border border-gray-200\">\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">{category.category}</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {category.tools.map((tool, toolIndex) => (\n                      <Badge key={toolIndex} variant=\"outline\" className=\"text-xs\">\n                        {tool}\n                      </Badge>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Security Dashboard Preview */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Security Operations Center Dashboard\n            </h2>\n            <p className=\"text-lg text-gray-600\">\n              Real-time security monitoring and threat intelligence\n            </p>\n          </div>\n\n          <div className=\"bg-gray-900 rounded-2xl p-8 shadow-2xl\">\n            <div className=\"bg-white rounded-lg p-6\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Security Operations Dashboard</h3>\n                <div className=\"flex items-center space-x-2\">\n                  <Badge variant=\"outline\" className=\"text-red-600\">High Alert</Badge>\n                  <Button size=\"sm\" variant=\"outline\">\n                    <AlertTriangle className=\"h-4 w-4 mr-2\" />\n                    Active Threats\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-gradient-to-r from-green-400 to-green-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">24/7</div>\n                  <div className=\"text-green-100 text-sm\">Monitoring Active</div>\n                  <div className=\"text-xs text-green-200\">Global SOC</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-yellow-400 to-yellow-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">3</div>\n                  <div className=\"text-yellow-100 text-sm\">Active Threats</div>\n                  <div className=\"text-xs text-yellow-200\">Under investigation</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-red-400 to-red-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">1</div>\n                  <div className=\"text-red-100 text-sm\">Critical Alert</div>\n                  <div className=\"text-xs text-red-200\">Immediate attention</div>\n                </div>\n                <div className=\"bg-gradient-to-r from-blue-400 to-blue-500 rounded-lg p-4 text-white\">\n                  <div className=\"text-2xl font-bold\">99.2%</div>\n                  <div className=\"text-blue-100 text-sm\">Detection Rate</div>\n                  <div className=\"text-xs text-blue-200\">Last 24 hours</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Threat Timeline</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-2 h-2 bg-red-500 rounded-full mr-2\"></div>\n                        <span>Malware detected on endpoint</span>\n                      </div>\n                      <span className=\"text-gray-500\">2 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-2 h-2 bg-yellow-500 rounded-full mr-2\"></div>\n                        <span>Suspicious login from new location</span>\n                      </div>\n                      <span className=\"text-gray-500\">8 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-2 h-2 bg-orange-500 rounded-full mr-2\"></div>\n                        <span>Multiple failed authentication</span>\n                      </div>\n                      <span className=\"text-gray-500\">15 min ago</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <div className=\"flex items-center\">\n                        <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\n                        <span>Threat contained and mitigated</span>\n                      </div>\n                      <span className=\"text-gray-500\">1 hour ago</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <h4 className=\"font-medium text-gray-900 mb-3\">Risk Indicators</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Malware detections</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-red-500 h-2 rounded-full\" style={{width: '85%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">High</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Suspicious network activity</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-yellow-500 h-2 rounded-full\" style={{width: '60%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">Med</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm\">Failed login attempts</span>\n                      <div className=\"flex items-center\">\n                        <div className=\"w-20 bg-gray-200 rounded-full h-2 mr-2\">\n                          <div className=\"bg-green-500 h-2 rounded-full\" style={{width: '25%'}}></div>\n                        </div>\n                        <span className=\"text-sm font-medium\">Low</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-primary-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4\">\n            Secure Your Organization Today\n          </h2>\n          <p className=\"text-xl text-primary-100 mb-8\">\n            Deploy advanced security analytics and start protecting your assets immediately.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-primary-600 hover:bg-gray-100\">\n              Start Security Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-primary-700\">\n              Contact Security Expert\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":25570}}}